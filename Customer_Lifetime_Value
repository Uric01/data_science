{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "12151776",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-14T17:28:10.943617Z",
     "iopub.status.busy": "2024-06-14T17:28:10.943167Z",
     "iopub.status.idle": "2024-06-14T17:28:12.039999Z",
     "shell.execute_reply": "2024-06-14T17:28:12.038392Z"
    },
    "papermill": {
     "duration": 1.113829,
     "end_time": "2024-06-14T17:28:12.043268",
     "exception": false,
     "start_time": "2024-06-14T17:28:10.929439",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/ecommerce-clv/customer_acquisition_data.csv\n",
      "/kaggle/input/online-retail/online_retail_II.xlsx\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "import matplotlib.pyplot as plt\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "        \n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d4a0eb48",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:28:12.068504Z",
     "iopub.status.busy": "2024-06-14T17:28:12.067777Z",
     "iopub.status.idle": "2024-06-14T17:28:29.711628Z",
     "shell.execute_reply": "2024-06-14T17:28:29.710206Z"
    },
    "papermill": {
     "duration": 17.66008,
     "end_time": "2024-06-14T17:28:29.714994",
     "exception": false,
     "start_time": "2024-06-14T17:28:12.054914",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting lifetimes\r\n",
      "  Downloading Lifetimes-0.11.3-py3-none-any.whl.metadata (4.8 kB)\r\n",
      "Requirement already satisfied: numpy>=1.10.0 in /opt/conda/lib/python3.10/site-packages (from lifetimes) (1.26.4)\r\n",
      "Requirement already satisfied: scipy>=1.0.0 in /opt/conda/lib/python3.10/site-packages (from lifetimes) (1.11.4)\r\n",
      "Requirement already satisfied: pandas>=0.24.0 in /opt/conda/lib/python3.10/site-packages (from lifetimes) (2.2.2)\r\n",
      "Collecting autograd>=1.2.0 (from lifetimes)\r\n",
      "  Downloading autograd-1.6.2-py3-none-any.whl.metadata (706 bytes)\r\n",
      "Requirement already satisfied: dill>=0.2.6 in /opt/conda/lib/python3.10/site-packages (from lifetimes) (0.3.8)\r\n",
      "Requirement already satisfied: future>=0.15.2 in /opt/conda/lib/python3.10/site-packages (from autograd>=1.2.0->lifetimes) (1.0.0)\r\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from pandas>=0.24.0->lifetimes) (2.9.0.post0)\r\n",
      "Requirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas>=0.24.0->lifetimes) (2023.3.post1)\r\n",
      "Requirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas>=0.24.0->lifetimes) (2023.4)\r\n",
      "Requirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.8.2->pandas>=0.24.0->lifetimes) (1.16.0)\r\n",
      "Downloading Lifetimes-0.11.3-py3-none-any.whl (584 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m584.2/584.2 kB\u001b[0m \u001b[31m9.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hDownloading autograd-1.6.2-py3-none-any.whl (49 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m49.3/49.3 kB\u001b[0m \u001b[31m2.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: autograd, lifetimes\r\n",
      "Successfully installed autograd-1.6.2 lifetimes-0.11.3\r\n"
     ]
    }
   ],
   "source": [
    "!pip install lifetimes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "66004ecb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:28:29.742344Z",
     "iopub.status.busy": "2024-06-14T17:28:29.741799Z",
     "iopub.status.idle": "2024-06-14T17:28:31.004629Z",
     "shell.execute_reply": "2024-06-14T17:28:31.003003Z"
    },
    "papermill": {
     "duration": 1.28075,
     "end_time": "2024-06-14T17:28:31.008190",
     "exception": false,
     "start_time": "2024-06-14T17:28:29.727440",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from lifetimes.plotting import *\n",
    "from lifetimes.utils import *\n",
    "from lifetimes import BetaGeoFitter\n",
    "from lifetimes import GammaGammaFitter"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d8a7d8c3",
   "metadata": {
    "papermill": {
     "duration": 0.013099,
     "end_time": "2024-06-14T17:28:31.035542",
     "exception": false,
     "start_time": "2024-06-14T17:28:31.022443",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**DATA AQUISITION**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "bf876c7e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:28:31.063116Z",
     "iopub.status.busy": "2024-06-14T17:28:31.062398Z",
     "iopub.status.idle": "2024-06-14T17:30:14.146264Z",
     "shell.execute_reply": "2024-06-14T17:30:14.144579Z"
    },
    "papermill": {
     "duration": 103.115059,
     "end_time": "2024-06-14T17:30:14.163286",
     "exception": false,
     "start_time": "2024-06-14T17:28:31.048227",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Invoice</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>Price</th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>489434</td>\n",
       "      <td>85048</td>\n",
       "      <td>15CM CHRISTMAS GLASS BALL 20 LIGHTS</td>\n",
       "      <td>12</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.95</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>489434</td>\n",
       "      <td>79323P</td>\n",
       "      <td>PINK CHERRY LIGHTS</td>\n",
       "      <td>12</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.75</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>489434</td>\n",
       "      <td>79323W</td>\n",
       "      <td>WHITE CHERRY LIGHTS</td>\n",
       "      <td>12</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.75</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>489434</td>\n",
       "      <td>22041</td>\n",
       "      <td>RECORD FRAME 7\" SINGLE SIZE</td>\n",
       "      <td>48</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>2.10</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>489434</td>\n",
       "      <td>21232</td>\n",
       "      <td>STRAWBERRY CERAMIC TRINKET BOX</td>\n",
       "      <td>24</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>1.25</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Invoice StockCode                          Description  Quantity  \\\n",
       "0  489434     85048  15CM CHRISTMAS GLASS BALL 20 LIGHTS        12   \n",
       "1  489434    79323P                   PINK CHERRY LIGHTS        12   \n",
       "2  489434    79323W                  WHITE CHERRY LIGHTS        12   \n",
       "3  489434     22041         RECORD FRAME 7\" SINGLE SIZE         48   \n",
       "4  489434     21232       STRAWBERRY CERAMIC TRINKET BOX        24   \n",
       "\n",
       "          InvoiceDate  Price  Customer ID         Country  \n",
       "0 2009-12-01 07:45:00   6.95      13085.0  United Kingdom  \n",
       "1 2009-12-01 07:45:00   6.75      13085.0  United Kingdom  \n",
       "2 2009-12-01 07:45:00   6.75      13085.0  United Kingdom  \n",
       "3 2009-12-01 07:45:00   2.10      13085.0  United Kingdom  \n",
       "4 2009-12-01 07:45:00   1.25      13085.0  United Kingdom  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_excel('/kaggle/input/online-retail/online_retail_II.xlsx')\n",
    "data2 = pd.DataFrame(data)\n",
    "data2.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "524e301c",
   "metadata": {
    "papermill": {
     "duration": 0.012302,
     "end_time": "2024-06-14T17:30:14.188523",
     "exception": false,
     "start_time": "2024-06-14T17:30:14.176221",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**DATA WRANGLING**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "42d7e75b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:14.216170Z",
     "iopub.status.busy": "2024-06-14T17:30:14.215477Z",
     "iopub.status.idle": "2024-06-14T17:30:14.622985Z",
     "shell.execute_reply": "2024-06-14T17:30:14.621453Z"
    },
    "papermill": {
     "duration": 0.424938,
     "end_time": "2024-06-14T17:30:14.626123",
     "exception": false,
     "start_time": "2024-06-14T17:30:14.201185",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method DataFrame.info of        Invoice StockCode                          Description  Quantity  \\\n",
       "0       489434     85048  15CM CHRISTMAS GLASS BALL 20 LIGHTS        12   \n",
       "1       489434    79323P                   PINK CHERRY LIGHTS        12   \n",
       "2       489434    79323W                  WHITE CHERRY LIGHTS        12   \n",
       "3       489434     22041         RECORD FRAME 7\" SINGLE SIZE         48   \n",
       "4       489434     21232       STRAWBERRY CERAMIC TRINKET BOX        24   \n",
       "...        ...       ...                                  ...       ...   \n",
       "525456  538171     22271                 FELTCRAFT DOLL ROSIE         2   \n",
       "525457  538171     22750         FELTCRAFT PRINCESS LOLA DOLL         1   \n",
       "525458  538171     22751       FELTCRAFT PRINCESS OLIVIA DOLL         1   \n",
       "525459  538171     20970   PINK FLORAL FELTCRAFT SHOULDER BAG         2   \n",
       "525460  538171     21931               JUMBO STORAGE BAG SUKI         2   \n",
       "\n",
       "               InvoiceDate  Price  Customer ID         Country  \n",
       "0      2009-12-01 07:45:00   6.95      13085.0  United Kingdom  \n",
       "1      2009-12-01 07:45:00   6.75      13085.0  United Kingdom  \n",
       "2      2009-12-01 07:45:00   6.75      13085.0  United Kingdom  \n",
       "3      2009-12-01 07:45:00   2.10      13085.0  United Kingdom  \n",
       "4      2009-12-01 07:45:00   1.25      13085.0  United Kingdom  \n",
       "...                    ...    ...          ...             ...  \n",
       "525456 2010-12-09 20:01:00   2.95      17530.0  United Kingdom  \n",
       "525457 2010-12-09 20:01:00   3.75      17530.0  United Kingdom  \n",
       "525458 2010-12-09 20:01:00   3.75      17530.0  United Kingdom  \n",
       "525459 2010-12-09 20:01:00   3.75      17530.0  United Kingdom  \n",
       "525460 2010-12-09 20:01:00   1.95      17530.0  United Kingdom  \n",
       "\n",
       "[512562 rows x 8 columns]>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#data2 = data[data.duplicated(subset=['Customer ID'], keep=False)]\n",
    "data2 = data2[data2['Description'] != 'This is a test product.']\n",
    "data2 = data2[data2['Description'] != 'Manual']\n",
    "data2 = data2[data2['Quantity'] > -1]\n",
    "data2.info"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04d72c47",
   "metadata": {
    "papermill": {
     "duration": 0.013174,
     "end_time": "2024-06-14T17:30:14.652754",
     "exception": false,
     "start_time": "2024-06-14T17:30:14.639580",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "6681e8ba",
   "metadata": {
    "papermill": {
     "duration": 0.01376,
     "end_time": "2024-06-14T17:30:14.680239",
     "exception": false,
     "start_time": "2024-06-14T17:30:14.666479",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**EXPLORATORY DATA ANALYSIS**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f0e3355b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:14.711302Z",
     "iopub.status.busy": "2024-06-14T17:30:14.710862Z",
     "iopub.status.idle": "2024-06-14T17:30:14.730095Z",
     "shell.execute_reply": "2024-06-14T17:30:14.728459Z"
    },
    "papermill": {
     "duration": 0.038587,
     "end_time": "2024-06-14T17:30:14.733473",
     "exception": false,
     "start_time": "2024-06-14T17:30:14.694886",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Invoice</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>Price</th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>489434</td>\n",
       "      <td>85048</td>\n",
       "      <td>15CM CHRISTMAS GLASS BALL 20 LIGHTS</td>\n",
       "      <td>12</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.95</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>489434</td>\n",
       "      <td>79323P</td>\n",
       "      <td>PINK CHERRY LIGHTS</td>\n",
       "      <td>12</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.75</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>489434</td>\n",
       "      <td>79323W</td>\n",
       "      <td>WHITE CHERRY LIGHTS</td>\n",
       "      <td>12</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>6.75</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>489434</td>\n",
       "      <td>22041</td>\n",
       "      <td>RECORD FRAME 7\" SINGLE SIZE</td>\n",
       "      <td>48</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>2.10</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>489434</td>\n",
       "      <td>21232</td>\n",
       "      <td>STRAWBERRY CERAMIC TRINKET BOX</td>\n",
       "      <td>24</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>1.25</td>\n",
       "      <td>13085.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Invoice StockCode                          Description  Quantity  \\\n",
       "0  489434     85048  15CM CHRISTMAS GLASS BALL 20 LIGHTS        12   \n",
       "1  489434    79323P                   PINK CHERRY LIGHTS        12   \n",
       "2  489434    79323W                  WHITE CHERRY LIGHTS        12   \n",
       "3  489434     22041         RECORD FRAME 7\" SINGLE SIZE         48   \n",
       "4  489434     21232       STRAWBERRY CERAMIC TRINKET BOX        24   \n",
       "\n",
       "          InvoiceDate  Price  Customer ID         Country  \n",
       "0 2009-12-01 07:45:00   6.95      13085.0  United Kingdom  \n",
       "1 2009-12-01 07:45:00   6.75      13085.0  United Kingdom  \n",
       "2 2009-12-01 07:45:00   6.75      13085.0  United Kingdom  \n",
       "3 2009-12-01 07:45:00   2.10      13085.0  United Kingdom  \n",
       "4 2009-12-01 07:45:00   1.25      13085.0  United Kingdom  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4e19affa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:14.764762Z",
     "iopub.status.busy": "2024-06-14T17:30:14.764257Z",
     "iopub.status.idle": "2024-06-14T17:30:14.897761Z",
     "shell.execute_reply": "2024-06-14T17:30:14.896241Z"
    },
    "papermill": {
     "duration": 0.15347,
     "end_time": "2024-06-14T17:30:14.900871",
     "exception": false,
     "start_time": "2024-06-14T17:30:14.747401",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Quantity</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>Price</th>\n",
       "      <th>Customer ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>512562.000000</td>\n",
       "      <td>512562</td>\n",
       "      <td>512562.000000</td>\n",
       "      <td>407257.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>11.722865</td>\n",
       "      <td>2010-06-28 21:24:02.624346368</td>\n",
       "      <td>3.468801</td>\n",
       "      <td>15368.529064</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>2009-12-01 07:45:00</td>\n",
       "      <td>-53594.360000</td>\n",
       "      <td>12346.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>2010-03-21 14:55:00</td>\n",
       "      <td>1.250000</td>\n",
       "      <td>13997.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3.000000</td>\n",
       "      <td>2010-07-06 16:36:00</td>\n",
       "      <td>2.100000</td>\n",
       "      <td>15321.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>11.000000</td>\n",
       "      <td>2010-10-15 14:52:00</td>\n",
       "      <td>4.210000</td>\n",
       "      <td>16812.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>19152.000000</td>\n",
       "      <td>2010-12-09 20:01:00</td>\n",
       "      <td>13541.330000</td>\n",
       "      <td>18287.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>93.025385</td>\n",
       "      <td>NaN</td>\n",
       "      <td>113.806796</td>\n",
       "      <td>1679.740322</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Quantity                    InvoiceDate          Price  \\\n",
       "count  512562.000000                         512562  512562.000000   \n",
       "mean       11.722865  2010-06-28 21:24:02.624346368       3.468801   \n",
       "min         1.000000            2009-12-01 07:45:00  -53594.360000   \n",
       "25%         1.000000            2010-03-21 14:55:00       1.250000   \n",
       "50%         3.000000            2010-07-06 16:36:00       2.100000   \n",
       "75%        11.000000            2010-10-15 14:52:00       4.210000   \n",
       "max     19152.000000            2010-12-09 20:01:00   13541.330000   \n",
       "std        93.025385                            NaN     113.806796   \n",
       "\n",
       "         Customer ID  \n",
       "count  407257.000000  \n",
       "mean    15368.529064  \n",
       "min     12346.000000  \n",
       "25%     13997.000000  \n",
       "50%     15321.000000  \n",
       "75%     16812.000000  \n",
       "max     18287.000000  \n",
       "std      1679.740322  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a20e72b",
   "metadata": {
    "papermill": {
     "duration": 0.013956,
     "end_time": "2024-06-14T17:30:14.928917",
     "exception": false,
     "start_time": "2024-06-14T17:30:14.914961",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**TRANSFORMING THE TRANSACTION DATA INTO A FREQUENCY, RECENCY, AND AGE DATASET**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1fc68aef",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:14.960024Z",
     "iopub.status.busy": "2024-06-14T17:30:14.959571Z",
     "iopub.status.idle": "2024-06-14T17:30:15.228353Z",
     "shell.execute_reply": "2024-06-14T17:30:15.226918Z"
    },
    "papermill": {
     "duration": 0.287537,
     "end_time": "2024-06-14T17:30:15.231174",
     "exception": false,
     "start_time": "2024-06-14T17:30:14.943637",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>frequency</th>\n",
       "      <th>recency</th>\n",
       "      <th>T</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Customer ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12358.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>2009-12-05 15:00:00</td>\n",
       "      <td>12358.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12359.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>2009-12-05 15:00:00</td>\n",
       "      <td>12359.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12362.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-05 15:00:00</td>\n",
       "      <td>12362.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12417.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2009-12-05 15:47:00</td>\n",
       "      <td>12417.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12422.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>2009-12-05 15:47:00</td>\n",
       "      <td>12422.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18268.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18268.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18271.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18271.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18275.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18275.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18276.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18276.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18286.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>2009-12-08 13:59:00</td>\n",
       "      <td>18286.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>953 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             frequency  recency     T         InvoiceDate  CustomerID\n",
       "Customer ID                                                          \n",
       "12358.0            0.0      0.0  23.0 2009-12-05 15:00:00     12358.0\n",
       "12359.0            1.0     11.0  26.0 2009-12-05 15:00:00     12359.0\n",
       "12362.0            0.0      0.0  30.0 2009-12-05 15:00:00     12362.0\n",
       "12417.0            1.0      4.0  25.0 2009-12-05 15:47:00     12417.0\n",
       "12422.0            0.0      0.0  13.0 2009-12-05 15:47:00     12422.0\n",
       "...                ...      ...   ...                 ...         ...\n",
       "18268.0            0.0      0.0  20.0 2009-12-08 13:58:00     18268.0\n",
       "18271.0            0.0      0.0  23.0 2009-12-08 13:58:00     18271.0\n",
       "18275.0            0.0      0.0  23.0 2009-12-08 13:58:00     18275.0\n",
       "18276.0            0.0      0.0  21.0 2009-12-08 13:58:00     18276.0\n",
       "18286.0            0.0      0.0  15.0 2009-12-08 13:59:00     18286.0\n",
       "\n",
       "[953 rows x 5 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from lifetimes.utils import summary_data_from_transaction_data\n",
    "\n",
    "TransformedSummary = summary_data_from_transaction_data(data2,'Customer ID','InvoiceDate',observation_period_end='2009-12-31')\n",
    "TransformedSummary['InvoiceDate'] = data2['InvoiceDate']\n",
    "TransformedSummary['CustomerID'] = TransformedSummary.index.tolist()\n",
    "TransformedSummary"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a5b7163",
   "metadata": {
    "papermill": {
     "duration": 0.013535,
     "end_time": "2024-06-14T17:30:15.258823",
     "exception": false,
     "start_time": "2024-06-14T17:30:15.245288",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**DATA MODELLING**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9347c5fe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:15.288758Z",
     "iopub.status.busy": "2024-06-14T17:30:15.288309Z",
     "iopub.status.idle": "2024-06-14T17:30:15.478007Z",
     "shell.execute_reply": "2024-06-14T17:30:15.476848Z"
    },
    "papermill": {
     "duration": 0.209209,
     "end_time": "2024-06-14T17:30:15.482022",
     "exception": false,
     "start_time": "2024-06-14T17:30:15.272813",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<lifetimes.BetaGeoFitter: fitted with 953 subjects, a: 5.85, alpha: 10.46, b: 10.17, r: 0.26>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bgf = BetaGeoFitter(penalizer_coef=0.0)\n",
    "bgf.fit(TransformedSummary['frequency'],TransformedSummary['recency'],TransformedSummary['T'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "df4810a8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:15.545684Z",
     "iopub.status.busy": "2024-06-14T17:30:15.544932Z",
     "iopub.status.idle": "2024-06-14T17:30:15.567575Z",
     "shell.execute_reply": "2024-06-14T17:30:15.566464Z"
    },
    "papermill": {
     "duration": 0.059565,
     "end_time": "2024-06-14T17:30:15.571939",
     "exception": false,
     "start_time": "2024-06-14T17:30:15.512374",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>coef</th>\n",
       "      <th>se(coef)</th>\n",
       "      <th>lower 95% bound</th>\n",
       "      <th>upper 95% bound</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>r</th>\n",
       "      <td>0.262103</td>\n",
       "      <td>0.036276</td>\n",
       "      <td>0.191001</td>\n",
       "      <td>0.333204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>alpha</th>\n",
       "      <td>10.464291</td>\n",
       "      <td>2.048924</td>\n",
       "      <td>6.448401</td>\n",
       "      <td>14.480181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>a</th>\n",
       "      <td>5.848905</td>\n",
       "      <td>8.538976</td>\n",
       "      <td>-10.887487</td>\n",
       "      <td>22.585297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>b</th>\n",
       "      <td>10.171407</td>\n",
       "      <td>16.154945</td>\n",
       "      <td>-21.492285</td>\n",
       "      <td>41.835100</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            coef   se(coef)  lower 95% bound  upper 95% bound\n",
       "r       0.262103   0.036276         0.191001         0.333204\n",
       "alpha  10.464291   2.048924         6.448401        14.480181\n",
       "a       5.848905   8.538976       -10.887487        22.585297\n",
       "b      10.171407  16.154945       -21.492285        41.835100"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bgf.summary"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b65f49e",
   "metadata": {
    "papermill": {
     "duration": 0.014422,
     "end_time": "2024-06-14T17:30:15.611030",
     "exception": false,
     "start_time": "2024-06-14T17:30:15.596608",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**VISUALISING FREQUENCY/RECENCY MATRIX**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "c91036ce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:15.642832Z",
     "iopub.status.busy": "2024-06-14T17:30:15.642307Z",
     "iopub.status.idle": "2024-06-14T17:30:16.201568Z",
     "shell.execute_reply": "2024-06-14T17:30:16.200053Z"
    },
    "papermill": {
     "duration": 0.578888,
     "end_time": "2024-06-14T17:30:16.204736",
     "exception": false,
     "start_time": "2024-06-14T17:30:15.625848",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Expected Number of Future Purchases for 1 Unit of Time,\\nby Frequency and Recency of a Customer'}, xlabel=\"Customer's Historical Frequency\", ylabel=\"Customer's Recency\">"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAg0AAAHcCAYAAABVkpmDAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAB+d0lEQVR4nO3deXwM9/8H8Ncmcl9ELiEk4iaOBmlcUVIR6iiqVCVudZMejpZQKlWqcZXSEl9FHXWVOkMUdTXEfYtbQpREEhKyn98ffjuykqxNdswm6ev5eMyDnZ35fD4zmZ197+eYj0oIIUBERET0GibGLgAREREVDQwaiIiISC8MGoiIiEgvDBqIiIhILwwaiIiISC8MGoiIiEgvDBqIiIhILwwaiIiISC8MGoiIiEgvDBpk1qtXL3h6ehq7GAbp1asXbG1tjV0MvW3btg1169aFpaUlVCoVHj16ZOwiUTZRUVFQqVT4559/jF0U2S1btgzVqlWDmZkZSpYsaeziGI2npyd69eqlSF5Hjx5Fo0aNYGNjA5VKhbi4OIPSmzhxIlQqlTyF+w/IV9Cg+fDntRw6dOhNlVNWZ8+excSJE3Ht2jWjlaF58+ZQqVRo165djveuXbsGlUqFGTNmGKFkRcuDBw/QtWtXWFlZYd68eVi2bBlsbGxy3VbX9TtmzJh85VsYrqG8xMTEaB2bmZkZKlasiJCQEFy9etXYxSs2zp8/j169esHb2xuLFi3CwoUL32h+d+/exZgxY/DOO+/Azs4OKpUKMTExeu/fvHlz1KpVK9f3kpKSoFKpMHHiRFnK+qY+H8+ePcMHH3yAf//9Fz/88AOWLVuGChUq5NjO09NT53eVZomKipK1fP8FJQqy09dffw0vL68c6ytVqmRwgZRw9uxZTJo0Cc2bNzd6rcDmzZsRGxsLX19fo5ajqDp69CgeP36MyZMnIzAwUK99crt+87qZ5qUwXUN5GT58OBo0aIBnz57h2LFjWLhwIbZs2YJTp07B3d3d2MUr8mJiYqBWqzFr1ixF7n0XLlzAtGnTULlyZfj4+ODgwYNvPE99XbhwASYmL3+DvqnPx5UrV3D9+nUsWrQI/fr1y3O7yMhIpKamSq///PNPrFy5Ej/88AOcnJyk9Y0aNcLHH3+c7x8N/2UFChqCg4NRv359ucvyn1O+fHk8fvwYkyZNwqZNm4xdHEUJIfD06VNYWVkZlM69e/cAIF9Vw4X5+k1LS8uzpiS/mjZtii5dugAAevfujSpVqmD48OFYunQpxo4da1DaarUamZmZsLS0lKOoRVJBrr3XSU9Ph7W1da7v+fr64sGDB3B0dMTatWvxwQcfyJavoSwsLBTJR99z3rFjR63XCQkJWLlyJTp27JhrEFOiRIG+Cv+T3kifhvDwcJiYmCA6Olpr/YABA2Bubo4TJ04AeFmNumrVKowbNw5ubm6wsbFB+/btcfPmzRzpHj58GK1bt4aDgwOsra0REBCAAwcO5Nju9u3b6Nu3L9zd3WFhYQEvLy8MGjQImZmZiIqKkj5s77zzjlRNlb2ab+vWrWjatClsbGxgZ2eHtm3b4syZMzny2bBhA2rVqgVLS0vUqlUL69evz9d5srOzw6hRo/DHH3/g2LFjOrfNq91NU+WevRrQ09MT7733HmJiYlC/fn1YWVnBx8dHOsZ169bBx8cHlpaW8PX1xfHjx3PN8+rVqwgKCoKNjQ3c3d3x9ddf49VJUdVqNSIjI1GzZk1YWlrC1dUVAwcOxMOHD7W205Rp+/btUpl++uknnce8Zs0a+Pr6wsrKCk5OTvj4449x+/Zt6f3mzZsjNDQUANCgQQOoVCqD21XzqqLN3mb7umtInzQ06ahUKuzduxeDBw+Gi4sLypUrJ72v73WorxYtWgAA4uPjAeTd/ya3a02lUmHo0KFYvnw5atasCQsLC2zbtg2A7s9bdhkZGQgLC4OzszNsbGzw/vvv4/79+1rbbNy4EW3btpXS8vb2xuTJk5GVlaW13aVLl9C5c2e4ubnB0tIS5cqVQ7du3ZCcnKy13a+//ipdQ46OjujWrVuOe4u+aWXn6emJ8PBwAICzs3OOv/mPP/4onSd3d3cMGTIkR18bTXNBbGwsmjVrBmtra4wbNy7PPO3s7ODo6Jjn+3LTXAeXL19Gr169ULJkSTg4OKB3795IT0/X2jY/n4+87N69W7reS5YsiQ4dOuDcuXPS+7169UJAQAAA4IMPPoBKpULz5s1lO87sNNf7mjVrUKNGDVhZWcHf3x+nTp0CAPz000+oVKkSLC0t0bx581ybYfT9vipqChReJScnIykpSWudSqVC6dKlAQBfffUV/vjjD/Tt2xenTp2CnZ0dtm/fjkWLFmHy5MmoU6eO1r7ffPMNVCoVRo8ejXv37iEyMhKBgYGIi4uTfonu3r0bwcHB8PX1lYKSJUuWoEWLFti3bx8aNmwIALhz5w4aNmyIR48eYcCAAahWrRpu376NtWvXIj09Hc2aNcPw4cMxe/ZsjBs3DtWrVwcA6d9ly5YhNDQUQUFBmDZtGtLT0zF//nw0adIEx48fl26yO3bsQOfOnVGjRg1ERETgwYMH6N27t9ZNXx8jRozADz/8gIkTJ8pa23D58mV89NFHGDhwID7++GPMmDED7dq1w4IFCzBu3DgMHjwYABAREYGuXbvmqF7MyspC69at8fbbb+O7777Dtm3bEB4ejufPn+Prr7+Wths4cCCioqLQu3dvDB8+HPHx8Zg7dy6OHz+OAwcOwMzMTNr2woUL6N69OwYOHIj+/fujatWqeZZfk2aDBg0QERGBxMREzJo1CwcOHMDx48dRsmRJfPnll6hatSoWLlwoNTl4e3u/9tzkdv1mr7J8ndddQ/k1ePBgODs7Y8KECUhLSwOg/3WYH1euXAEA6XOaX7t378bq1asxdOhQODk5wdPT87WfN3Nzc2n/YcOGoVSpUggPD8e1a9cQGRmJoUOHYtWqVdI2UVFRsLW1RVhYGGxtbbF7925MmDABKSkpmD59OgAgMzMTQUFByMjIwLBhw+Dm5obbt29j8+bNePToERwcHAC8uK+MHz8eXbt2Rb9+/XD//n3MmTMHzZo1k64hfdN6VWRkJP73v/9h/fr1mD9/PmxtbVG7dm0AL76EJk2ahMDAQAwaNAgXLlzA/PnzcfTo0RyfiQcPHiA4OBjdunXDxx9/DFdX1wL9bd6krl27wsvLCxERETh27Bh+/vlnuLi4YNq0abluX5DPx65duxAcHIyKFSti4sSJePLkCebMmYPGjRvj2LFj8PT0xMCBA1G2bFlMnTpVanp7k+dr37592LRpE4YMGQLgxb3yvffewxdffIEff/wRgwcPxsOHD/Hdd9+hT58+2L17t7Svvt9XRZLIhyVLlggAuS4WFhZa2546dUqYm5uLfv36iYcPH4qyZcuK+vXri2fPnknb7NmzRwAQZcuWFSkpKdL61atXCwBi1qxZQggh1Gq1qFy5sggKChJqtVraLj09XXh5eYl3331XWhcSEiJMTEzE0aNHc5Rfs++aNWsEALFnzx6t9x8/fixKliwp+vfvr7U+ISFBODg4aK2vW7euKFOmjHj06JG0bseOHQKAqFChwutOpQgICBA1a9YUQggxadIkAUDExsYKIYSIj48XAMT06dOl7cPDw0Vufy7N3yQ+Pl5aV6FCBQFA/P3339K67du3CwDCyspKXL9+XVr/008/5TgXoaGhAoAYNmyYtE6tVou2bdsKc3Nzcf/+fSGEEPv27RMAxPLly7XKtG3bthzrNWXatm3ba89NZmamcHFxEbVq1RJPnjyR1m/evFkAEBMmTMhx/Ln9vV+l6/rVACDCw8Nz7FuhQgURGhoqvc7rGspPGpryNGnSRDx//lxan5/rMDeaz9XixYvF/fv3xZ07d8SWLVuEp6enUKlU0rkKDQ3N9VrN7VoDIExMTMSZM2e01uvzedMcZ2BgoNbnd9SoUcLU1FTrM5Senp4jnYEDBwpra2vx9OlTIYQQx48fFwDEmjVr8jwH165dE6ampuKbb77RWn/q1ClRokQJab0+aeVFc540nwchhLh3754wNzcXrVq1EllZWdL6uXPnSn8TjYCAAAFALFiwIN9567r+8pL9nvOq+/fv57huNcfXp08frW3ff/99Ubp0aa11+fl85KZu3brCxcVFPHjwQFp34sQJYWJiIkJCQqR1mms7v3+v6dOn57hPauR1vVtYWGhtr7lXurm5aX1fjR07Vivt/HxfFUUFap6YN28edu7cqbVs3bpVa5tatWph0qRJ+PnnnxEUFISkpCQsXbo017ajkJAQ2NnZSa+7dOmCMmXK4M8//wQAxMXF4dKlS/joo4/w4MEDJCUlISkpCWlpaWjZsiX++usvqNVqqNVqbNiwAe3atcu1zfp1w2p27tyJR48eoXv37lIeSUlJMDU1hZ+fH/bs2QPgRS/muLg4hIaGav0Seffdd1GjRg39T+T/GzFiBEqVKoVJkyble9+81KhRA/7+/tJrPz8/AC+qqMuXL59jfW696ocOHSr9X1Ndl5mZiV27dgF40Xzg4OCAd999V+t8+fr6wtbWVjpfGl5eXggKCnpt2f/55x/cu3cPgwcP1mozb9u2LapVq4YtW7bocwrylNv1a0z9+/eHqamp9Frf6/B1+vTpA2dnZ7i7u6Nt27ZIS0vD0qVLC9yfIyAgQOv6zu/nbcCAAVrrmjZtiqysLFy/fl1al72Py+PHj5GUlISmTZsiPT0d58+fBwDpM7d9+/Yc1eQa69atg1qtRteuXbXOoZubGypXriydQ33Syo9du3YhMzMTI0eO1Kq569+/P+zt7XNcuxYWFujdu7fB+b5Jn3zyidbrpk2b4sGDB0hJSZElfc39tFevXlrNL7Vr18a7774rfQ8orWXLllo1epp7ZefOnbW+r169h+r7fVVUFah5omHDhnrdeD7//HP89ttvOHLkCKZOnZrnF2rlypW1XqtUKlSqVElqJ7p06RIASO3XuUlOTkZmZiZSUlLy3RNeQ5OPpu33Vfb29gAg3eReLTcAVK1a9bX9E17l4OCAkSNHIjw8HMePH0epUqXytX9usgcGmjwAwMPDI9f1r/ZBMDExQcWKFbXWValSBQC0/i7JyclwcXHJtQyaTksauY24yY3m/ObWfFGtWjXs379fr3Tyou/1q5RXz4u+1+HrTJgwAU2bNoWpqSmcnJxQvXp1gzp8vVrO+/fv5+vz9uo1qbnOs197Z86cwVdffYXdu3fn+FLS9DHw8vJCWFgYZs6cieXLl6Np06Zo3749Pv74Y+l6vnTpEoQQuX5GAUhNBPqklR95Xbvm5uaoWLGiVoAEAGXLltVqwjG23H5Y6fq76Xst6qLr8169enVs375d1g7C+iroPVTf7ys57vPG8Ea7jF69elU6gZoOJAWhicqmT5+OunXr5rqNra0t/v333wLnkT2fZcuWwc3NLcf7b7KHraZvw6RJkxAZGZnj/bxqSV7tIKaR/ZerPuvFKx0c9aFWq+Hi4oLly5fn+r6zs7PWa0NHShhTXudZjjRePS9yXYc+Pj46h6Hm95oy9O/3umvv0aNHCAgIgL29Pb7++mt4e3vD0tISx44dw+jRo7V+nX3//ffo1asXNm7ciB07dmD48OGIiIjAoUOHUK5cOajVaqhUKmzdujXXfLM/vOx1ab1JSn4mLC0t8eTJk1zf09Sy5DYaRs57RlFS0Huovt9XRdUb+xZUq9Xo1asX7O3tMXLkSEydOhVdunRBp06dcmyrCSw0hBC4fPmy1LFI07nN3t5e503Q2dkZ9vb2OH36tM6y5XWz1OTj4uKiMx/Nw0ReLTfworNfQWhqGyZOnJhrhKqJSh89eqQ13OjVXy5yUavVuHr1qlS7AAAXL14EAKnKztvbG7t27ULjxo1lvflpzu+FCxdy/Nq+cOFCrg9zkUupUqVy9HLPzMzE3bt3tdbpaurSN4286HsdGiq3cgL6X1P6ft70FRMTgwcPHmDdunVo1qyZtF4z2uNVPj4+8PHxwVdffYW///4bjRs3xoIFCzBlyhR4e3tDCAEvLy+tazgvutLKj+zXbvaauszMTMTHx7/Rv+frVKhQAbt378aTJ09yfF419y25Plv5ecJi9nP2qvPnz8PJyUnxWgZD6Pt9VVS9scdIz5w5E3///TcWLlyIyZMno1GjRhg0aFCOXusA8L///Q+PHz+WXq9duxZ3795FcHAwgBfjk729vTFjxgytB3ZoaIZtmZiYoGPHjvjjjz9yfWStJhLUXICv3jCDgoJgb2+PqVOn4tmzZ3nmU6ZMGdStWxdLly7VGpa1c+dOnD17Vud50WXkyJEoWbKk1ugEDc2F+Ndff0nrNG3Ub8rcuXOl/wshMHfuXJiZmaFly5YAXvSqzsrKwuTJk3Ps+/z58wI/zrl+/fpwcXHBggULkJGRIa3funUrzp07h7Zt2xYoXX14e3trnWMAWLhwYY5f33ldQ/lJIy/6XoeG8vb2RnJyMk6ePCmtu3v3rt5Dh/X9vOlL8wsu+36ZmZn48ccftbZLSUnB8+fPtdb5+PjAxMREul46deoEU1NTTJo0KUc5hBB48OCB3mnlR2BgIMzNzTF79mytfH/55RckJye/0Wv3ddq0aYNnz57lGOqsVqsxf/58mJubS59tQ+n6fLwq+/00+/anT5/Gjh070KZNG1nKpBR9v6+KqgLVNGzdulXqlJRdo0aNULFiRZw7dw7jx49Hr169pMckR0VFoW7duhg8eDBWr16ttZ+joyOaNGmC3r17IzExEZGRkahUqRL69+8P4MXN6eeff0ZwcDBq1qyJ3r17o2zZsrh9+zb27NkDe3t7/PHHHwCAqVOnYseOHQgICMCAAQNQvXp13L17F2vWrMH+/ftRsmRJ1K1bF6amppg2bRqSk5NhYWGBFi1awMXFBfPnz0fPnj3x1ltvoVu3bnB2dsaNGzewZcsWNG7cWPoijYiIQNu2bdGkSRP06dMH//77L+bMmYOaNWvmeqHow8HBASNGjMi1Q2SrVq1Qvnx59O3bF59//jlMTU2xePFiqXxys7S0xLZt2xAaGgo/Pz9s3boVW7Zswbhx46Rmh4CAAAwcOBARERGIi4tDq1atYGZmhkuXLmHNmjWYNWuW9HCh/DAzM8O0adPQu3dvBAQEoHv37tKQS09PT4waNUruw5X069cPn3zyCTp37ox3330XJ06cwPbt23MMydR1DembRl7s7e31vg4N0a1bN4wePRrvv/8+hg8fLg3rrFKlit79cvT5vOmrUaNGKFWqFEJDQzF8+HCoVCosW7Ysx5f+7t27MXToUHzwwQeoUqUKnj9/jmXLlsHU1BSdO3cG8CIgmjJlCsaOHYtr166hY8eOsLOzQ3x8PNavX48BAwbgs88+0yut/HB2dsbYsWMxadIktG7dGu3bt8eFCxfw448/okGDBvj444/znWZ2mpoPzfM6li1bJvXx+eqrr3Tu265dO7Rq1QqjRo3CkSNH0KhRI6Snp2PTpk04cOAApkyZkqNJsaB0fT5yM336dAQHB8Pf3x99+/aVhlw6ODjI9mhrpeTn+wp4USsTEBCQr0eCG1V+hlroGrIGQCxZskQ8f/5cNGjQQJQrV05rKJUQQsyaNUsAEKtWrRJCvBw+s3LlSjF27Fjh4uIirKysRNu2bbWGBWocP35cdOrUSZQuXVpYWFiIChUqiK5du4ro6Git7a5fvy5CQkKEs7OzsLCwEBUrVhRDhgwRGRkZ0jaLFi0SFStWFKampjmGBu3Zs0cEBQUJBwcHYWlpKby9vUWvXr3EP//8o5XP77//LqpXry4sLCxEjRo1xLp16/IcxvaqvIY/PXz4UDg4OOQYcimEELGxscLPz0+Ym5uL8uXLi5kzZ+Y55LJt27Y50gYghgwZorUut+GdoaGhwsbGRly5ckW0atVKWFtbC1dXVxEeHq41jExj4cKFwtfXV1hZWQk7Ozvh4+MjvvjiC3Hnzp3XlkmXVatWiXr16gkLCwvh6OgoevToIW7duqW1TUGGXOraNisrS4wePVo4OTkJa2trERQUJC5fvpxjSJkQeV9D+qbxuvLoex3mth/0HJa2Y8cOUatWLWFubi6qVq0qfv311zyHoL167Wi87vOW13Fqypn9s3fgwAHx9ttvCysrK+Hu7i6++OILabiwZrurV6+KPn36CG9vb2FpaSkcHR3FO++8I3bt2pWjbL///rto0qSJsLGxETY2NqJatWpiyJAh4sKFC/lO61W5DbnUmDt3rqhWrZowMzMTrq6uYtCgQeLhw4da2+gaApkXXfdffTx9+lRMnDhRVKtWTVhYWAgbGxvx9ttvi19//VXv48vrnqPv5yMvu3btEo0bNxZWVlbC3t5etGvXTpw9e1ZrGyWHXOpzr9RVJn2+rx4/fiwAiG7duuXreIxJJYTxerPExMTgnXfewZo1awr0i5SIiKio+vPPP/Hee+/hxIkT8PHxMXZx9MKpsYmIiIxgz5496NatW5EJGIA3POSSiIiIcqd5NHpRwpoGIiIi0otR+zQQERFR0cGaBiIiItILgwYiIiLSC4OGfJg4cSJUKlWuT7Uk0iUmJgYqlaroPMClmElNTUW/fv3g5uYGlUqFkSNHGrtIREUSg4ZCqHnz5lCpVLkuuT2Jk4qPqKgorb93iRIlULZsWfTq1Qu3b982dvGKrKlTpyIqKgqDBg3CsmXL0LNnzzeaX1xcHD7++GN4eHjAwsICjo6OCAwMxJIlS2SZ/Cw3P/74I6Kiot5I2kQaHHJZSJUrVw4RERE51ru7uxuhNKS0r7/+Gl5eXnj69CkOHTqEqKgo7N+/H6dPn851JkLSbffu3Xj77bcRHh7+xvP6+eef8cknn8DV1RU9e/ZE5cqV8fjxY0RHR6Nv3764e/cuxo0bJ3u+P/74I5ycnNCrVy/Z0ybSYNBQSDk4OOTrOfXGmG+e3pzg4GDUr18fwIv5MJycnDBt2jRs2rQJXbt2NXLpip579+6hRo0abzyfQ4cO4ZNPPoG/vz/+/PNP2NnZSe+NHDkS//zzj2yzghY36enpsLa2NnYx6DXYPFEASUlJ6Nq1K+zt7VG6dGmMGDECT58+ld4PCAhAnTp1ct23atWqCAoKMij/Xr16wdbWFleuXEGbNm1gZ2eHHj16AHgxY11kZCRq1qwJS0tLuLq6YuDAgXj48KFWGkIITJkyBeXKlYO1tTXeeecdnDlzBp6enlq/VDT9OF6lqUa/du2a1vqtW7eiadOmsLGxgZ2dHdq2bStNrvNq+W/fvo2OHTvC1tYWzs7O+Oyzz3JU3arVasyaNQs+Pj6wtLSEs7MzWrduLc2qaOi53rhxI9q2bQt3d3dYWFjA29sbkydPzlGO5s2bo1atWjh79izeeecdWFtbo2zZsvjuu+9ypHnr1i107NgRNjY2cHFxwahRowo0Y2J2TZs2BQBcuXJFa/358+fRpUsXODo6wtLSEvXr18emTZty7P/o0SOMGjUKnp6esLCwQLly5RASEqLVPycjIwPh4eGoVKkSLCws4OHhgS+++CJH2VUqFYYOHYoNGzagVq1asLCwQM2aNbFt27Yc+d6+fRt9+/aVzq+XlxcGDRqEzMxMXL16FSqVCj/88EOO/f7++2+oVCqsXLlS53m5d+8e+vbtC1dXV1haWqJOnTpaM79q+pLEx8djy5YtUrPPq9dtdkuWLJEmV7KwsECNGjUwf/58neXQmDRpElQqFZYvX64VMGjUr19f+nzl1c/l2rVrUKlUWk0NCQkJ6N27N8qVKwcLCwuUKVMGHTp0kI7D09MTZ86cwd69e6VjbN68ubT/1atX8cEHH8DR0RHW1tZ4++23sWXLFq18NeVZvXo1Jk2ahLJly8LOzg5dunRBcnIyMjIyMHLkSLi4uMDW1ha9e/fO9br+9ddf4evrCysrKzg6OqJbt264efOm1jaaz1NsbCyaNWsGa2vrN1L7QvJjTUMBdO3aFZ6enoiIiMChQ4cwe/ZsPHz4EP/73/8AAD179kT//v1x+vRp1KpVS9rv6NGjuHjx4mtnowOArKysHB0uLS0tYWtrC+DF1NNBQUFo0qQJZsyYIUXoAwcORFRUFHr37o3hw4cjPj4ec+fOxfHjx3HgwAGYmZkBACZMmIApU6agTZs2aNOmDY4dO4ZWrVohMzOzwOdl2bJlCA0NRVBQEKZNmybNmtikSRMcP34cnp6eWscXFBQEPz8/zJgxA7t27cL3338Pb29vDBo0SNqub9++iIqKQnBwMPr164fnz59j3759OHToEOrXr2/wuY6KioKtrS3CwsJga2uL3bt3Y8KECUhJScnxtLaHDx+idevW6NSpE7p27Yq1a9di9OjR8PHxkaZxf/LkCVq2bIkbN25g+PDhcHd3x7Jly7B79+4Cn1cA0pdDqVKlpHVnzpxB48aNUbZsWYwZMwY2NjZYvXo1OnbsiN9//x3vv/8+gBedAJs2bYpz586hT58+eOutt5CUlIRNmzbh1q1bcHJyglqtRvv27bF//35ptspTp07hhx9+wMWLF7Fhwwat8uzfvx/r1q3D4MGDYWdnh9mzZ6Nz5864ceMGSpcuDQC4c+cOGjZsiEePHmHAgAGoVq0abt++jbVr1yI9PR0VK1ZE48aNsXz58hwzl2q+dDt06JDnOXny5AmaN2+Oy5cvY+jQofDy8sKaNWvQq1cvPHr0CCNGjED16tWxbNkyjBo1CuXKlcOnn34KADpnc5w/fz5q1qyJ9u3bo0SJEvjjjz8wePBgqNVqDBkyJM/90tPTER0djWbNmqF8+fJ5blcQnTt3xpkzZzBs2DB4enri3r172LlzJ27cuAFPT09ERkZi2LBhsLW1xZdffgkAcHV1BQAkJiZKM1oOHz4cpUuXxtKlS9G+fXusXbtWuk40IiIiYGVlhTFjxuDy5cuYM2cOzMzMYGJigocPH2LixIlSk5mXlxcmTJgg7fvNN99g/Pjx6Nq1K/r164f79+9jzpw5aNasGY4fP6416+mDBw8QHByMbt264eOPP5bKS4WcUafLKmI0s6G1b99ea/3gwYMFAHHixAkhhBCPHj0SlpaWYvTo0VrbDR8+XNjY2IjU1FSd+QQEBOQ6i51mFrnQ0FABQIwZM0Zrv3379gkAYvny5Vrrt23bprX+3r17wtzcXLRt21ao1Wppu3Hjxmnlk/2YX/XqTHePHz8WJUuWFP3799faLiEhQTg4OGit15T/66+/1tq2Xr16wtfXV3q9e/duAUAMHz48R/6acht6rtPT03OsGzhwoLC2thZPnz6V1mn+Jv/73/+kdRkZGcLNzU107txZWhcZGSkAiNWrV0vr0tLSRKVKlfSa6U9zXnft2iXu378vbt68KdauXSvNIHnz5k1p25YtWwofHx+tcqrVatGoUSNRuXJlad2ECRMEALFu3boc+WnO47Jly4SJiYnYt2+f1vsLFiwQAMSBAwekdQCEubm5uHz5srTuxIkTAoCYM2eOtC4kJESYmJjkOounJt+ffvpJABDnzp2T3svMzBROTk45Zk18leZcZ5+hMTMzU/j7+wtbW1uRkpIirc/PLKu5XRNBQUGiYsWKOvfTnIMRI0bolU9us3wK8XI2xSVLlgghXsx8i1xmV3xVzZo1RUBAQI71I0eOFAC0/raPHz8WXl5ewtPTU5q5VlOeWrVqiczMTGnb7t27C5VKJYKDg7XS9ff315rR99q1a8LU1FR88803WtudOnVKlChRQmu95vO0YMECncdEhQ+bJwrg1V8bw4YNA/BixjLgRX+EDh06YOXKlRD//8DNrKwsrFq1Sqq2fh1PT0/s3LlTa/niiy+0tsn+ixwA1qxZAwcHB7z77rtISkqSFl9fX9ja2mLPnj0AgF27diEzMxPDhg3TanowZBjazp078ejRI3Tv3l0rb1NTU/j5+Ul5Z/fJJ59ovW7atCmuXr0qvf7999+hUqly7bymKbeh59rKykr6/+PHj5GUlISmTZsiPT09x0gVW1tbrX4m5ubmaNiwoVaZ//zzT5QpU0Zr1lZra2sMGDBAZzleFRgYCGdnZ3h4eKBLly6wsbHBpk2bUK5cOQDAv//+i927d6Nr165SuZOSkvDgwQMEBQXh0qVL0miL33//HXXq1MnxixJ4eR7XrFmD6tWro1q1alp/vxYtWgBAjr9fYGAgvL29pde1a9eGvb29dC7UajU2bNiAdu3aSX0zcsu3a9eusLS0xPLly6X3tm/fjqSkpNf26fnzzz/h5uaG7t27S+vMzMwwfPhwpKamYu/evTr3z0v2ayI5ORlJSUkICAjA1atXkZycnOd+KSkpAJBrs4QhrKysYG5ujpiYmBzNjPr4888/0bBhQzRp0kRaZ2triwEDBuDatWs4e/as1vYhISFSjSQA+Pn5QQiBPn36aG3n5+eHmzdv4vnz5wCAdevWQa1Wo2vXrlrXkJubGypXrpzjGrKwsEDv3r3zfTxkXGyeKIDKlStrvfb29oaJiYlWO2lISAhWrVqFffv2oVmzZti1axcSExP1HuplY2ODwMDAPN8vUaKE9AWicenSJSQnJ8PFxSXXfe7duwcAuH79eq7H4ezsrFX9nR+XLl0CAOlL5lX29vZarzX9E7IrVaqU1k3xypUrcHd3h6Ojo868DTnXZ86cwVdffYXdu3dLN32NV78gypUrl6N/R6lSpXDy5Enp9fXr11GpUqUc21WtWvW1Zclu3rx5qFKlCpKTk7F48WL89ddfsLCwkN6/fPkyhBAYP348xo8fn2sa9+7dQ9myZXHlyhV07txZZ36XLl3CuXPn8qy211w7GrlVv2f/+92/fx8pKSlaTUa5KVmyJNq1a4cVK1Zg8uTJAF40TZQtWzbPa0nj+vXrqFy5MkxMtH/7VK9eXXq/IA4cOIDw8HAcPHgQ6enpWu8lJyfDwcEh1/001/jjx48LlG9eLCwsMG3aNHz66adwdXXF22+/jffeew8hISFwc3N77f7Xr1+Hn59fjvXZz1P2v9Orf1vN8Xp4eORYr1arkZycjNKlS+PSpUsQQuS4r2hkD0QAoGzZsjA3N39t+alwYdAgg9w6CgYFBcHV1RW//vormjVrhl9//RVubm46A4H8sLCwyHGzVKvVcHFx0frVlp2udty85HZsAHLtsAi86NeQ242sRAntS83U1DTfZclLQc/1o0ePEBAQAHt7e3z99dfw9vaGpaUljh07htGjR0vH9LoyizcwfUvDhg2lX+gdO3ZEkyZN8NFHH+HChQuwtbWVyvbZZ5/l2dmzUqVKeuenVqvh4+ODmTNn5vr+q18Ycp6LkJAQrFmzBn///Td8fHywadMmDB48OMf1rYQrV66gZcuWqFatGmbOnAkPDw+Ym5vjzz//xA8//JDjmsiuUqVKKFGiBE6dOqVXXvp+toAXtYDt2rXDhg0bsH37dowfPx4RERHYvXs36tWrp9/B6Smvv+3r/uZqtRoqlQpbt27NdVtNfyyN7DU6VHQwaCiAS5cuwcvLS3p9+fJlqNVqrY5+pqam+OijjxAVFYVp06Zhw4YN6N+/v6xflq/y9vbGrl270LhxY50fyAoVKkjHUbFiRWn9/fv3c1R/amoeHj16pNWJ6dVfcZqqahcXF9kCI29vb2zfvh3//vuvztqGgp7rmJgYPHjwAOvWrUOzZs2k9fHx8QUuc4UKFXD69GkIIbS+FC5cuFDgNE1NTREREYF33nkHc+fOxZgxY6S/m5mZ2WvPt7e392uH+Xl7e+PEiRNo2bJlnl9m+eHs7Ax7e3u9hhe2bt0azs7OWL58Ofz8/JCenq5XLVGFChVw8uRJqNVqrQBD06ykuc7z448//kBGRgY2bdqk9Ys7t+a1V1lbW6NFixbYvXs3bt68mSPQelX2z1Z2edWQeHt749NPP8Wnn36KS5cuoW7duvj+++/x66+/Asg7CKlQoUKu158h5ymv8gkh4OXlhSpVqsiSJhU+7NNQAPPmzdN6PWfOHACQetBr9OzZEw8fPsTAgQORmpqar+cuFETXrl2RlZUlVfNm9/z5c+nmFBgYCDMzM8yZM0frl2FkZGSO/TTBwF9//SWtS0tL0xrWBrz4tW9vb4+pU6fi2bNnOdK5f/9+vo+nc+fOEEJg0qRJOd579RdtQc61JqjInlZmZiZ+/PHHfJdVo02bNrhz5w7Wrl0rrUtPT8fChQsLnCbwYohaw4YNERkZiadPn8LFxQXNmzfHTz/9hLt37+bYPvv57ty5M06cOIH169fn2E5z7F27dsXt27exaNGiHNs8efIEaWlp+SqviYkJOnbsiD/++EMaHptbvsCLWqju3btj9erViIqKgo+PD2rXrv3aPNq0aYOEhASsWrVKWvf8+XPMmTMHtra2CAgIyFeZgdyvieTkZCxZskSv/cPDwyGEQM+ePZGamprj/djYWOmzU6FCBZiammp9tgDkuP7S09O1hnQDLz6XdnZ2WkMebWxscgQgwIvzdOTIERw8eFBal5aWhoULF8LT01O251d06tQJpqammDRpUo7PpxACDx48kCUfMi7WNBRAfHw82rdvj9atW+PgwYP49ddf8dFHH+V4XkC9evVQq1YtqZPZW2+99UbLFRAQgIEDByIiIgJxcXFo1aoVzMzMcOnSJaxZswazZs1Cly5dpGciRERE4L333kObNm1w/PhxbN26FU5OTlpptmrVCuXLl0ffvn3x+eefw9TUFIsXL4azszNu3LghbWdvb4/58+ejZ8+eeOutt9CtWzdpmy1btqBx48aYO3duvo7nnXfeQc+ePTF79mxcunQJrVu3hlqtxr59+/DOO+9g6NCh0rYFOdeNGjVCqVKlEBoaiuHDh0OlUmHZsmUGNTf0798fc+fORUhICGJjY1GmTBksW7ZMlofWfP755/jggw8QFRWFTz75BPPmzUOTJk3g4+OD/v37o2LFikhMTMTBgwdx69YtnDhxQtpv7dq1+OCDD9CnTx/4+vri33//xaZNm7BgwQLUqVMHPXv2xOrVq/HJJ59gz549aNy4MbKysnD+/HmsXr0a27dvz7VDoy5Tp07Fjh07EBAQIA3jvHv3LtasWYP9+/dr1VyFhIRg9uzZ2LNnD6ZNm6ZX+gMGDMBPP/2EXr16ITY2Fp6enli7di0OHDiAyMjIAnVIbNWqFczNzdGuXTspAF20aBFcXFxyDc5e1ahRI8ybNw+DBw9GtWrVtJ4IGRMTg02bNmHKlCkAXvQJ+OCDDzBnzhyoVCp4e3tj8+bNOfqPXLx4ES1btkTXrl1Ro0YNlChRAuvXr0diYiK6desmbefr64v58+djypQpqFSpElxcXNCiRQuMGTMGK1euRHBwMIYPHw5HR0csXboU8fHx+P3332VrBvL29saUKVMwduxYXLt2DR07doSdnR3i4+Oxfv16DBgwAJ999pkseZERKTpWo4jTDD88e/as6NKli7CzsxOlSpUSQ4cOFU+ePMl1n++++04AEFOnTtU7n4CAAFGzZs083w8NDRU2NjZ5vr9w4ULh6+srrKyshJ2dnfDx8RFffPGFuHPnjrRNVlaWmDRpkihTpoywsrISzZs3F6dPnxYVKlTIMdQtNjZW+Pn5CXNzc1G+fHkxc+bMHEMuNfbs2SOCgoKEg4ODsLS0FN7e3qJXr17in3/+eW35cxve+fz5czF9+nRRrVo1YW5uLpydnUVwcLCIjY3NsX9BzvWBAwfE22+/LaysrIS7u7v44osvxPbt23MMhcvrbxIaGqo17EwIIa5fvy7at28vrK2thZOTkxgxYoQ07FXfIZe5DVPMysoS3t7ewtvbWzx//lwIIcSVK1dESEiIcHNzE2ZmZqJs2bLivffeE2vXrtXa98GDB2Lo0KGibNmywtzcXJQrV06EhoaKpKQkaZvMzEwxbdo0UbNmTWFhYSFKlSolfH19xaRJk0RycrK0HQAxZMiQHOXL7dq5fv26CAkJkYaMVqxYUQwZMkRkZGTk2L9mzZrCxMRE3Lp1S+c5yi4xMVH07t1bODk5CXNzc+Hj4yMNVXy1bPoOudy0aZOoXbu2sLS0FJ6enmLatGli8eLFuV7veYmNjRUfffSRcHd3F2ZmZqJUqVKiZcuWYunSpdIQRyGEuH//vujcubOwtrYWpUqVEgMHDhSnT5/WGnKZlJQkhgwZIqpVqyZsbGyEg4OD8PPz0xrWK8SL4c1t27YVdnZ2AoDW8MsrV66ILl26iJIlSwpLS0vRsGFDsXnzZq39NUMu16xZo7U+r2tS83m9f/++1vrff/9dNGnSRNjY2AgbGxtRrVo1MWTIEHHhwgVpm9fd46jwUgnxBnpxkWTWrFkYNWoUrl27JvsDX94ET09PNG/evEhOfFPUzjVpq1evHhwdHREdHW3sohBRHtin4Q0SQuCXX35BQEAAv8TeMJ7rou2ff/5BXFwcQkJCjF0UItKBfRregLS0NGzatAl79uzBqVOnsHHjRmMXqdjiuS7aTp8+jdjYWHz//fcoU6YMPvzwQ2MXiYh0YNDwBty/fx8fffQRSpYsiXHjxqF9+/bGLlKxxXNdtK1duxZff/01qlatipUrV3Lab6JCjn0aiIiICqF58+Zh+vTpSEhIQJ06dTBnzhw0bNgw120XLVqE//3vf9KzUXx9fTF16lSt7Xv16pXrcPncZqjNC/s0EBERFTKrVq1CWFgYwsPDcezYMdSpUwdBQUE5huRqxMTEoHv37tizZw8OHjwIDw8PtGrVSpqDRqN169a4e/eutLxu+vlXsaaBiIiokPHz80ODBg2k59uo1Wp4eHhg2LBhGDNmzGv3z8rKQqlSpaTnxgCQpo1/dar7/PhP9mlQq9W4c+cO7OzsZHlkLhERKUsIgcePH8Pd3f2NzlPy9OlTZGZmGpyOubm53n12MjMzERsbi7Fjx0rrTExMEBgYqPVkT13S09Px7NmzHI/gj4mJgYuLC0qVKoUWLVpgypQpKF26tN7H8Z8MGu7cufPa58ITEVHhd/PmzRwz/srl6dOn8Kpgi4R7OScRyy83NzecOHFCK3CwsLDQmr1WIykpCVlZWXB1ddVa7+rqKs0Z8jqjR4+Gu7u71tw0rVu3RqdOneDl5YUrV65g3LhxCA4OxsGDB/WeF+k/GTRoHi/bzOJ9lFCZvWZrAyk4U594ZviFrVc+z3POLfHmMmPrGRHl9BzPsB9/Fuhx4frKzMxEwr0sXI/1hL1dwe/lKY/VqOB7LUcQEB4ejokTJxpYypy+/fZb/Pbbb4iJidEKUrI/dlwzx4u3tzdiYmLQsmVLvdIu0kFDfnqWZqdpkiihMkMJ1Ruez12lYNCgeq5QPopko8lNycyIqKj4/1uDEk3MtnYq2NoVPB81Xux78+ZN2NvbS+tzq2UAACcnJ5iamiIxMVFrfWJiItzc3HTmNWPGDHz77bfYtWvXayd+q1ixIpycnHD58mW9g4YiO3oivz1LiYiICiJLqA1egBcT+2Vf8goazM3N4evrq/VIdbVajejoaPj7++dZzu+++w6TJ0/Gtm3b9Jpg7tatW3jw4AHKlCmj97koskHDzJkz0b9/f/Tu3Rs1atTAggULYG1tjcWLFxu7aEREVIyoIQxe8issLAyLFi3C0qVLce7cOQwaNAhpaWno3bs3gBczw2bvKDlt2jSMHz8eixcvhqenJxISEpCQkCBN0Z6amorPP/8chw4dwrVr1xAdHY0OHTqgUqVKCAoK0rtcRbJ5Ir89SzMyMrTmnU9JSVGknERERAXx4Ycf4v79+5gwYQISEhJQt25dbNu2TeoXcePGDa1RI/Pnz0dmZia6dOmilY6m34SpqSlOnjyJpUuX4tGjR3B3d0erVq0wefLkPGs8clMkg4b89iyNiIjApEmTlCoeEREVI2qooTZw/4IYOnQohg4dmut7MTExWq+vXbumMy0rKyts3769QOXIrsg2T+TH2LFjkZycLC03b940dpGIiKiIyBLC4KW4KJI1DfntWZrXWFgiIiLSX5GsaShoz1IiIqL8MkZHyMKqSNY0AC96loaGhqJ+/fpo2LAhIiMjtXqWEhERyUENgSwDvvgZNBQCr+tZSkRERPIqskEDoLtnaaGh5IRYJgrlpeBTLmFQn+V8KEYdlYhIXoY2MbCmgYiI6D/C0BEQxWn0RJHsCElERETKY00DERGRDmoY1lCqUCOrIhg0EBER6ZBl4OgJQ/YtbBg0EBER6ZAlXiyG7F9csE8DERER6YU1DURERDqwT8NLDBqIiIh0UEOFLBT8OThqA/YtbNg8QURERHphTQMREZEOavFiMWT/4oJBAxERkQ5ZBjZPGLJvYcOgoRhRKTXPhVJzXAAQWYplRUREr8GggYiISAfWNLzEoIGIiEgHtVBBLQwYPWHAvoUNR08QERGRXljTQEREpAObJ15i0EBERKRDFkyQZUDFfHHqz82ggYiISAdhYJ8GwT4NRERE9F/DmgYiIiId2KfhJQYNREREOmQJE2QJA/o0FKPHSLN5goiIiPTCmgYiIiId1FBBbcBvbDWKT1UDg4Y3zUTByhyh0IWpUvCYVAodEye5IKI8sE/DS2yeICIiIr2wpoGIiEgHwztCsnmCiIjoP+FFnwYDJqxi8wQRERH917CmgYiISAe1gXNPcPQEERHRfwT7NLzEoIGIiEgHNUz4nIb/xz4NREREpBfWNBAREemQJVTIMmB6a0P2LWwYNBAREemQZWBHyCw2TxAREdF/DWsa3jCVSrlqKaFUXiYKVrUpNSWEUueuGPWiJvqvUAsTqA0YPaEuRp97Bg1EREQ6sHniJTZPEBERkV5Y00BERKSDGoaNgFDLVxSjY9BARESkg+EPdyo+lfrF50iIiIjojWJNAxERkQ6Gzz1RfH6fM2ggIiLSQQ0V1DCkTwOfCElERPSfwJqGl4rPkRAREdEbxZoGIiIiHQx/uFPx+X3OoIGIiEgHtVBBbchzGjjLJRVGKlNTZTLKUmpCCCg2z4VQ8JCIiIqqIllnMnHiRKhUKq2lWrVqxi4WEREVQ+r/b54o6FKcHu5UZGsaatasiV27dkmvS5QosodCRESFmOGzXDJoMLoSJUrAzc3N2MUgIiL6zyiy4c+lS5fg7u6OihUrokePHrhx44axi0RERMVQFlQGL8VFkaxp8PPzQ1RUFKpWrYq7d+9i0qRJaNq0KU6fPg07O7sc22dkZCAjI0N6nZKSomRxiYioCGPzxEtFMmgIDg6W/l+7dm34+fmhQoUKWL16Nfr27Ztj+4iICEyaNEnJIhIRERU7xSL8KVmyJKpUqYLLly/n+v7YsWORnJwsLTdv3lS4hEREVFRlwdAmiuKjSNY0vCo1NRVXrlxBz549c33fwsICFhYWCpeKiIiKAzZPvFQkg4bPPvsM7dq1Q4UKFXDnzh2Eh4fD1NQU3bt3N3bRiIiomOGEVS8VySO5desWunfvjqpVq6Jr164oXbo0Dh06BGdnZ2MXjYiISBbz5s2Dp6cnLC0t4efnhyNHjuS57aJFi9C0aVOUKlUKpUqVQmBgYI7thRCYMGECypQpAysrKwQGBuLSpUv5KlORDBp+++033LlzBxkZGbh16xZ+++03eHt7G7tYRERUDAmooDZgEQUYcrlq1SqEhYUhPDwcx44dQ506dRAUFIR79+7lun1MTAy6d++OPXv24ODBg/Dw8ECrVq1w+/ZtaZvvvvsOs2fPxoIFC3D48GHY2NggKCgIT58+1btcKiGEyPfRFHEpKSlwcHBAC8uuKKEyf6N5qSyLX18K8ey5cnllPlMmH6Xm0xBqZfIBgP/eR5v+Q56LZ4jBRiQnJ8Pe3v6N5KH5rvj877awsDUrcDoZqc8wvdGWfJXVz88PDRo0wNy5cwEAarUaHh4eGDZsGMaMGfPa/bOyslCqVCnMnTsXISEhEELA3d0dn376KT777DMAQHJyMlxdXREVFYVu3brpVa4iWdNARERU1KSkpGgt2Z8flF1mZiZiY2MRGBgorTMxMUFgYCAOHjyoV17p6el49uwZHB0dAQDx8fFISEjQStPBwQF+fn56pwkwaCAiItJJMzW2IQsAeHh4wMHBQVoiIiJyzS8pKQlZWVlwdXXVWu/q6oqEhAS9yjx69Gi4u7tLQYJmP0PSBIro6AkiIiKlaGarNGR/ALh586ZW88SbehTAt99+i99++w0xMTGwtLSUNW3WNBARESnA3t5ea8kraHBycoKpqSkSExO11icmJr52osYZM2bg22+/xY4dO1C7dm1pvWa/gqSZHYMGIiIiHeRqntCXubk5fH19ER0d/bIMajWio6Ph7++f537fffcdJk+ejG3btqF+/fpa73l5ecHNzU0rzZSUFBw+fFhnmq9i8wQREZEOaphAbcBv7ILsGxYWhtDQUNSvXx8NGzZEZGQk0tLS0Lt3bwBASEgIypYtK/WLmDZtGiZMmIAVK1bA09NT6qdga2sLW1tbqFQqjBw5ElOmTEHlypXh5eWF8ePHw93dHR07dtS7XAwaiIiICpkPP/wQ9+/fx4QJE5CQkIC6deti27ZtUkfGGzduwMTkZTAyf/58ZGZmokuXLlrphIeHY+LEiQCAL774AmlpaRgwYAAePXqEJk2aYNu2bfnq98DnNPA5DfnG5zQYkhGf00AkByWf0zBoXyeDn9Mwv+m6N1pWpbCmgYiISIeC9Et4df/igkEDERGRDsLAWS4FJ6wiIiKi/xrWNBQnKoViQBPlYk2VqUJ5KdTXQKiVjNMV6j/BvhNUzGVBhawCTDqVff/igkEDERGRDmphWL8EdTGKq9k8QURERHphTQMREZEOagM7Qhqyb2HDoIGIiEgHNVRQG9AvwZB9C5viE/4QERHRG8WaBiIiIh2yhApZBnSENGTfwoZBAxERkQ7s0/BS8TkSIiIieqNY00BERKSDGgbOPVGMOkIyaCAiItJBGDh6QjBoIL0p9WhnADBR5sJU7NHOAESWQnkp9ndSaApuIpINZ7l8iX0aiIiISC+saSAiItKBoydeYtBARESkA5snXio+4Q8RERG9UaxpICIi0oFzT7zEoIGIiEgHNk+8xOYJIiIi0gtrGoiIiHRgTcNLDBqIiIh0YNDwEpsniIiISC+saSAiItKBNQ0vMWgoTkxMjV0C+ZmqFclGpVYmHwiF8gEg1EpVJCp3TBBCubyI/p+AYcMmi9NVy6CBiIhIB9Y0vMQ+DURERKQX1jQQERHpwJqGlxg0EBER6cCg4SU2TxAREZFeWNNARESkA2saXmLQQEREpIMQKggDvvgN2bewkaV5YsmSJUhPT5cjKSIiIiqkZAkaxowZAzc3N/Tt2xd///23HEkSEREVCmqoDF6KC1mChtu3b2Pp0qVISkpC8+bNUa1aNUybNg0JCQlyJE9ERGQ0mj4NhizFhSxBQ4kSJfD+++9j48aNuHnzJvr374/ly5ejfPnyaN++PTZu3Ai1Uo/pJSIiojdC9o6Qrq6uaNKkCS5evIiLFy/i1KlTCA0NRalSpbBkyRI0b95c7iwLNxMFI0yl8lIwalaZKjMqWKgVmrdDwbkTVMhSJB/l5rgAFJvngnNcUDbsCPmSbJ/2xMREzJgxAzVr1kTz5s2RkpKCzZs3Iz4+Hrdv30bXrl0RGhoqV3ZERESKYPPES7IEDe3atYOHhweioqLQv39/3L59GytXrkRgYCAAwMbGBp9++ilu3rypV3p//fUX2rVrB3d3d6hUKmzYsEHrfSEEJkyYgDJlysDKygqBgYG4dOmSHIdCRESkRVPTYMhSXMgSNLi4uGDv3r04ffo0Ro4cCUdHxxzbODs7Iz4+Xq/00tLSUKdOHcybNy/X97/77jvMnj0bCxYswOHDh2FjY4OgoCA8ffrUoOMgIiKivMnSp+GXX3557TYqlQoVKlTQK73g4GAEBwfn+p4QApGRkfjqq6/QoUMHAMD//vc/uLq6YsOGDejWrZv+BSciInoNYWATA2saXjF8+HDMnj07x/q5c+di5MiRcmQhiY+PR0JCgtT0AQAODg7w8/PDwYMHc90nIyMDKSkpWgsREZE+BF70jS3wYuwDkJEsQcPvv/+Oxo0b51jfqFEjrF27Vo4sJJpnP7i6umqtd3V1zfO5EBEREXBwcJAWDw8PWctERET0XyBL0PDgwQM4ODjkWG9vb4+kpCQ5sjDI2LFjkZycLC36dsgkIiLiEyFfkiVoqFSpErZt25Zj/datW1GxYkU5spC4ubkBeDHEM7vExETpvVdZWFjA3t5eayEiItIHR0+8JEtHyLCwMAwdOhT3799HixYtAADR0dH4/vvvERkZKUcWEi8vL7i5uSE6Ohp169YFAKSkpODw4cMYNGiQrHkRERHRS7IEDX369EFGRga++eYbTJ48GQDg6emJ+fPnIyQkJN/ppaam4vLly9Lr+Ph4xMXFwdHREeXLl8fIkSMxZcoUVK5cGV5eXhg/fjzc3d3RsWNHOQ6HiIhIohYqqAyoLShOD3eS7THSgwYNwqBBg3D//n1YWVnB1ta2wGn9888/eOedd6TXYWFhAIDQ0FBERUXhiy++QFpaGgYMGIBHjx6hSZMm2LZtGywtLQ0+DiIiouw0oyAM2b+4kH3uCWdnZ4PTaN68OYSOs6xSqfD111/j66+/Njiv4kSlUiaaFaYKzdMAKPZpU6kV+lQrePcQCh2TykS5yeiEMtNpAAp9lgAUr28UKvZk6QiZmJiInj17wt3dHSVKlICpqanWQkREVFSxI+RLstQ09OrVCzdu3MD48eNRpkwZxX7xEhERvWmc5fIlWYKG/fv3Y9++fdJoBiIiouKCHSFfkqV5wsPDQ2cfBCIiIir6ZAkaIiMjMWbMGFy7dk2O5IiIiAoNg+adMHDkRWEjS/PEhx9+iPT0dHh7e8Pa2hpmZmZa7//7779yZENERKS4F1/8hvRpkLEwRiZL0CD3Ux+JiIio8JElaAgNDZUjGSIiokKHoydekqVPAwBcuXIFX331Fbp374579+4BeDFh1ZkzZ+TKgoiISHFChqW4kCVo2Lt3L3x8fHD48GGsW7cOqampAIATJ04gPDxcjiyIiIjIyGQJGsaMGYMpU6Zg586dMDc3l9a3aNEChw4dkiMLIiIio+ATIV+SpU/DqVOnsGLFihzrXVxckJSUJEcWRZeST8dUKC8ln/gpSsg+PUruiuHcEyq1MnNCKDYfBAColPo7KTefhmL3iOLUhV9phrYxFKNTL0tNQ8mSJXH37t0c648fP46yZcvKkQUREZFxGFrLUMCahnnz5sHT0xOWlpbw8/PDkSNH8tz2zJkz6Ny5Mzw9PaFSqXId1Thx4kSoVCqtpVq1avkqkyxBQ7du3TB69GgkJCRApVJBrVbjwIED+OyzzxASEiJHFkRERP8Zq1atQlhYGMLDw3Hs2DHUqVMHQUFB0kCDV6Wnp6NixYr49ttv4ebmlme6NWvWxN27d6Vl//79+SqXLEHD1KlTUa1aNXh4eCA1NRU1atRAs2bN0KhRI3z11VdyZEFERGQUxngi5MyZM9G/f3/07t0bNWrUwIIFC2BtbY3Fixfnun2DBg0wffp0dOvWDRYWFnmmW6JECbi5uUmLk5NTvsolS4Oxubk5Fi1ahAkTJuDUqVNITU1FvXr1ULlyZTmSJyIiMhq5ntOQkpKitd7CwiLXL/jMzEzExsZi7Nix0joTExMEBgbi4MGDBS4HAFy6dAnu7u6wtLSEv78/IiIiUL58eb33l7WXmYeHBzw8PORMkoiIqFh49fsxPDwcEydOzLFdUlISsrKy4OrqqrXe1dUV58+fL3D+fn5+iIqKQtWqVXH37l1MmjQJTZs2xenTp2FnZ6dXGrIEDZ07d0bDhg0xevRorfXfffcdjh49ijVr1siRDRERkfIM6Mwo7Q/g5s2bsLe3l1brakZ4E4KDg6X/165dG35+fqhQoQJWr16Nvn376pWGLH0a/vrrL7Rp0ybXAv71119yZEFERGQUcvVpsLe311ryChqcnJxgamqKxMRErfWJiYk6OznmV8mSJVGlShVcvnxZ731kCRpSU1O1HuqkYWZmlqMNh4iIiPJmbm4OX19fREdHS+vUajWio6Ph7+8vWz6pqam4cuUKypQpo/c+sgQNPj4+WLVqVY71v/32G2rUqCFHFkRERMZhhMknwsLCsGjRIixduhTnzp3DoEGDkJaWht69ewMAQkJCtDpKZmZmIi4uDnFxccjMzMTt27cRFxenVYvw2WefYe/evbh27Rr+/vtvvP/++zA1NUX37t31LpcsfRrGjx+PTp064cqVK2jRogUAIDo6GitXrmR/BiIiKtKMMcvlhx9+iPv372PChAlISEhA3bp1sW3bNqlz5I0bN2Bi8vJ3/507d1CvXj3p9YwZMzBjxgwEBAQgJiYGAHDr1i10794dDx48gLOzM5o0aYJDhw7B2dlZ73KphJDn2aJbtmzB1KlTERcXBysrK9SuXRvh4eEICAiQI3lZpaSkwMHBAS0su6KEKmezipxUtjZvNH2tvMzMFMtLKUKhRyEj85ki2YjnzxXJBwDwTKFjylLukcsiS6FnViv5GGmlFLPHSD8XzxCDjUhOTtbqXCgnzXdF+YUTYGJtWeB01OlPcWPA12+0rEqRbchl27Zt0bZtW7mSo4IwNVUmHwXnnlBs/gSF5p5QctoapQKu4jMVTzYKTjCk1LUHKBQIFbPgRFJMDyu/ZOnTAACPHj3Czz//jHHjxuHff/8FABw7dgy3b9+WKwsiIiLFcZbLl2SpaTh58iQCAwPh4OCAa9euoV+/fnB0dMS6detw48YN/O9//5MjGyIiIuVxlkuJLDUNYWFh6NWrFy5dugRLy5ftPm3atOFzGoiIiIoJWWoajh49ip9++inH+rJlyyIhIUGOLIiIiIxEBcN677B5QouFhUWuD3G6ePFivoZyEBERFTpsnpDI0jzRvn17fP3113j2/0O8VCoVbty4gdGjR6Nz585yZEFERERGJkvQ8P333yM1NRUuLi548uQJAgICUKlSJdja2uKbb76RIwsiIiLjMMITIQsrWZonHBwcsHPnTuzfvx8nT55Eamoq3nrrLQQGBsqRPBERkfHINMtlcSDbw50AoEmTJmjSpIn0+tixY5gwYQI2b94sZzZERERkBAY3T2zfvh2fffYZxo0bh6tXrwIAzp8/j44dO6JBgwZQK/UYYCIiojdArqmxiwODahp++eUX9O/fH46Ojnj48CF+/vlnzJw5E8OGDcOHH36I06dPo3r16nKVlYiISHkcPSExKGiYNWsWpk2bhs8//xy///47PvjgA/z44484deoUypUrJ1cZizaVbE/q1iMvhdrNTBU8JhNljkmpFkcl7x0qhSZdUvSYFMpHKDQvFgCoTJSaX0Wpz61StcuqYvVlXFQYFDRcuXIFH3zwAQCgU6dOKFGiBKZPn86AgYiIig92hJQYFDQ8efIE1tbWAF48m8HCwgJlypSRpWBERESFgUq8WAzZv7gwePTEzz//DFtbWwDA8+fPERUVBScnJ61thg8fbmg2RERExsE+DRKDgoby5ctj0aJF0ms3NzcsW7ZMaxuVSsWggYiIqBgwKGi4du2aTMUgIiIqpNinQSLrw52IiIiKHTZPSBQcO0dERERFGWsaiIiIdGFNg4RBAxERkS4MGiRsniAiIiK9yBI0HDt2DKdOnZJeb9y4ER07dsS4ceOQmZkpRxZERETGoRk9YchSTMjSPDFw4ECMGTMGPj4+uHr1Krp164b3338fa9asQXp6OiIjI+XIhl5HoXkaYMIKqoJS8tahVI2oSsH5VcTz54rko8IzRfIBAKHQF4oKykyoodwcFyaKXeR8IuRLsvx1L168iLp16wIA1qxZg2bNmmHFihWIiorC77//nu/0/vrrL7Rr1w7u7u5QqVTYsGGD1vu9evWCSqXSWlq3bi3DkRAREVFeZAkahBBQq1/MbLZr1y60adMGAODh4YGkpKR8p5eWloY6depg3rx5eW7TunVr3L17V1pWrlxZsMITERHpImRYiglZmifq16+PKVOmIDAwEHv37sX8+fMBAPHx8XB1dc13esHBwQgODta5jYWFBdzc3ApUXiIiIso/WWoaIiMjcezYMQwdOhRffvklKlWqBABYu3YtGjVqJEcWOcTExMDFxQVVq1bFoEGD8ODBgzeSDxER/bep8LJfQ4EWYx+AjGSpaahdu7bW6AmN6dOnw9TUVI4stLRu3RqdOnWCl5cXrly5gnHjxiE4OBgHDx7MNb+MjAxkZGRIr1NSUmQvExERUXH3Rh/uZGlp+UbS7datm/R/Hx8f1K5dG97e3oiJiUHLli1zbB8REYFJkya9kbIQEVExxwmrJAY1T3h5eaFixYrSYiwVK1aEk5MTLl++nOv7Y8eORXJysrTcvHlT4RISEVGRxY6QEoNqGqKiomQqhmFu3bqFBw8eoEyZMrm+b2FhAQsLC4VLRUREVLwYVNMQEBCAxo0b4/r166hWrZpcZUJqairi4uIQFxcH4MUojLi4ONy4cQOpqan4/PPPcejQIVy7dg3R0dHo0KEDKlWqhKCgINnKQEREBIA1DdkYPHqiRIkS+OSTT/D06VM5ygMA+Oeff1CvXj3Uq1cPABAWFoZ69ephwoQJMDU1xcmTJ9G+fXtUqVIFffv2ha+vL/bt28faBCIikp1BIycMfJpkYSNLR8iGDRvi+PHjqFChghzJoXnz5hAi77O8fft2WfIhIiIi/ckSNAwePBiffvopbt26BV9fX9jY2Gi9X7t2bTmyoddRKdNDV5gqOPeEQsek1LwdKqWOR8G8hFJzngBQKZWXgn8nKDSfhnJzkSiTk0qoAbUiWXFq7GxkCRo0QyCHDx8urVOpVBBCQKVSIStLmYlSiIiIZMegQSJL0BAfHy9HMkRERFSIyRI0yNWXgYiIqLDh1NgvydY4vWzZMjRu3Bju7u64fv06gBdzUmzcuFGuLIiIiJSneSKkIUsxIUvQMH/+fISFhaFNmzZ49OiR1IehZMmSiIyMlCMLIiIi4+BzGiSyBA1z5szBokWL8OWXX2pNGFW/fv1cJ7IiIiKioke2jpCaBzFlZ2FhgbS0NDmyICIiMgr2aXhJlpoGLy8v6ZHP2W3btg3Vq1eXIwsiIiLjYPOERJaahrCwMAwZMgRPnz6FEAJHjhzBypUrERERgZ9//lmOLIiIiMjIZAka+vXrBysrK3z11VdIT0/HRx99BHd3d8yaNUt68BMREVGRZOj8EaxpyKlHjx7o0aMH0tPTkZqaChcXF7mSJiIiMh4+EVIiW9CgYW1tDWtra7mTLboUfC6/Ys/LL2H6+m3kotgcAMockzBRbt4OlUJ5KTmfhmLzqyg5R4hS94gshT63Ck0boBJq4JkiWVE2sgQNDx48wIQJE7Bnzx7cu3cParX2LCL//vuvHNkQEREpjzUNElmChp49e+Ly5cvo27cvXF1dlf3lQURE9AZxyOVLsgQN+/btw/79+1GnTh05kiMiIqJCSJZGz2rVquHJkydyJEVERESFlCxBw48//ogvv/wSe/fuxYMHD5CSkqK1EBERFVl8uJNEluaJkiVLIiUlBS1atNBaL4SASqWSJrAiIiIqatin4SVZgoYePXrAzMwMK1asYEdIIiKiYkqWoOH06dM4fvw4qlatKkdyREREhUsxqi0whCx9GurXr4+bN2/KkRQREVHhwj4NEllqGoYNG4YRI0bg888/h4+PD8zMzLTer127thzZEBERkRHJEjR8+OGHAIA+ffpI61QqFTtCEhFRkceOkC/JEjTEx8fLkQwZSJgqNK+BgvMniBLK5aUIJY/nuUJzDSg4F4lKobxUz54rkg8AiGfKTKCgeq7QMWUpNOeJEEC6IlnxMdLZyBI0VKhQQY5kiIiIqBCTbZbLK1euIDIyEufOnQMA1KhRAyNGjIC3t7dcWRARESmOzRMvyVKPtH37dtSoUQNHjhxB7dq1Ubt2bRw+fBg1a9bEzp075ciCiIjIOIw0emLevHnw9PSEpaUl/Pz8cOTIkTy3PXPmDDp37gxPT0+oVCpERkYanGZuZAkaxowZg1GjRuHw4cOYOXMmZs6cicOHD2PkyJEYPXq0HFkQERH9Z6xatQphYWEIDw/HsWPHUKdOHQQFBeHevXu5bp+eno6KFSvi22+/hZubmyxp5kaWoOHcuXPo27dvjvV9+vTB2bNn5ciCiIjIOIxQ0zBz5kz0798fvXv3Ro0aNbBgwQJYW1tj8eLFuW7foEEDTJ8+Hd26dYOFhYUsaeZGlqDB2dkZcXFxOdbHxcXBxcVFjiyIiIiMQtOnwZAFQI7JHDMyMnLNLzMzE7GxsQgMDJTWmZiYIDAwEAcPHizQMciVpiwdIfv3748BAwbg6tWraNSoEQDgwIEDmDZtGsLCwuTIgoiIyDhkGnLp4eGhtTo8PBwTJ07MsXlSUhKysrLg6uqqtd7V1RXnz58vUBHkSlOWoGH8+PGws7PD999/j7FjxwIA3N3dMXHiRAwfPlyOLIiIiIq0mzdvwt7eXnqdVzNCYSZL0KBSqTBq1CiMGjUKjx8/BgDY2dnJkTQREZFxyVTTYG9vrxU05MXJyQmmpqZITEzUWp+YmJhnJ0el0pSlT0OLFi3w6NEjAC+CBU3AkJKSghYtWsiRBRERkVHI1adBX+bm5vD19UV0dLS0Tq1WIzo6Gv7+/gU6BrnSlKWmISYmBpmZmTnWP336FPv27ZMjCyIiov+MsLAwhIaGon79+mjYsCEiIyORlpaG3r17AwBCQkJQtmxZREREAHjR0VEzWjEzMxO3b99GXFwcbG1tUalSJb3S1IdBQcPJkyel/589exYJCQnS66ysLGzbtg1ly5Y1JAvKD5VKkWyEqTL5AArOPaHgfBpKEWZqRfJRKTXHBQCYyfYQW90UnHtC9ayYHZNCc1yo1Ap+Zo0w98SHH36I+/fvY8KECUhISEDdunWxbds2qSPjjRs3YJLtvnXnzh3Uq1dPej1jxgzMmDEDAQEBiImJ0StNfaiEEAU+FSYmJlD9/xdVbslYWVlhzpw5WrNfFgYpKSlwcHBAC8uuKKEyf6N5qRxe334lG3tbRbIRVm/2nGnlZabQF1IxDBqgVipoUCYfRfNSNGhQKK9iFjQ8V2diV+IiJCcn69VPoCA03xXVh06FqYVlgdPJyniKc3PHvdGyKsWgEDc+Ph5CCFSsWBFHjhyBs7Oz9J65uTlcXFxgaqrgrxAiIiJ6YwwKGjSzW6oV+kVDRESkOE6NLZGlTnbp0qXYsmWL9PqLL75AyZIl0ahRI1y/fl2OLIiIiIzDSBNWFUayBA1Tp06FlZUVAODgwYOYO3cuvvvuOzg5OWHUqFFyZEFERERGJku33Zs3b0pDOjZs2IAuXbpgwIABaNy4MZo3by5HFkREREah+v/FkP2LC1lqGmxtbfHgwQMAwI4dO/Duu+8CACwtLfHkyRM5siAiIjIONk9IZKlpePfdd9GvXz/Uq1cPFy9eRJs2bQAAZ86cgaenpxxZEBERGUVBnur46v7FhSw1DfPmzYO/vz/u37+P33//HaVLlwYAxMbGonv37nJkQUREREYmS01DyZIlMXfu3BzrJ02aJEfyRERExsMhlxJZgoa//vpL5/vNmjWTIxsiIiLjKEZf/IaQJWjIbYSEKts8CFlZWXJkUySpFJoPAgCEUnkp+MhlpR4jLUyVOSZhomA/6oI/IT5fVGrl7qZKPUZasfkgAKgUuj+qnil0H1bocdUii08bNgZZ7pQPHz7UWu7du4dt27ahQYMG2LFjR77SioiIQIMGDWBnZwcXFxd07NgRFy5c0Nrm6dOnGDJkCEqXLg1bW1t07tw5xxzhREREclB6auzCTJagwcHBQWtxcnLCu+++i2nTpuGLL77IV1p79+7FkCFDcOjQIezcuRPPnj1Dq1atkJaWJm0zatQo/PHHH1izZg327t2LO3fuoFOnTnIcChERkTYOuZS80To4V1fXHLUEr7Nt2zat11FRUXBxcUFsbCyaNWuG5ORk/PLLL1ixYgVatGgBAFiyZAmqV6+OQ4cO4e2335at/ERERPSSLEHDyZMntV4LIXD37l18++23qFu3rkFpJycnAwAcHR0BvBjG+ezZMwQGBkrbVKtWDeXLl8fBgwcZNBARkaz4nIaXZAka6tatC5VKBfFKx6u3334bixcvLnC6arUaI0eOROPGjVGrVi0AQEJCAszNzVGyZEmtbV1dXZGQkJBrOhkZGcjIyJBep6SkFLhMRET0H8MhlxJZgob4+Hit1yYmJnB2doalpaVB6Q4ZMgSnT5/G/v37DUonIiKCz4wgIiIykCxBQ4UKFeRIRsvQoUOxefNm/PXXXyhXrpy03s3NDZmZmXj06JFWbUNiYiLc3NxyTWvs2LEICwuTXqekpMDDw0P2MhMRUfHD5omXDBo9sXv3btSoUSPX6v7k5GTUrFkT+/bty1eaQggMHToU69evx+7du+Hl5aX1vq+vL8zMzBAdHS2tu3DhAm7cuAF/f/9c07SwsIC9vb3WQkREpBeOnpAYVNMQGRmJ/v375/ol7ODggIEDB2LmzJlo2rSp3mkOGTIEK1aswMaNG2FnZyf1U3BwcICVlRUcHBzQt29fhIWFwdHREfb29hg2bBj8/f3ZCZKIiOTHPg0Sg2oaTpw4gdatW+f5fqtWrRAbG5uvNOfPn4/k5GQ0b94cZcqUkZZVq1ZJ2/zwww9477330LlzZzRr1gxubm5Yt25dgY+DiIiIXs+gmobExESYmZnlnXiJErh//36+0nx1BEZuLC0tMW/ePMybNy9faRMREeUX+zS8ZFDQULZsWZw+fRqVKlXK9f2TJ0+iTJkyhmRB+aHQ3BPCVMH5NBSaEyLLQqE5LpSbtkOxv5OSN0RVlkLzaSiUD6DcfBomis3bocwcF2ol555g84TEoFtYmzZtMH78eDx9+jTHe0+ePEF4eDjee+89Q7IgIiKiQsKgmoavvvoK69atQ5UqVTB06FBUrVoVAHD+/HnMmzcPWVlZ+PLLL2UpKBERkTGohIDKgFljDdm3sDEoaHB1dcXff/+NQYMGYezYsVJ/BJVKhaCgIMybNw+urq6yFJSIiMgo2DwhMfjhThUqVMCff/6Jhw8f4vLlyxBCoHLlyihVqpQc5SMiIqJCQrZZLkuVKoUGDRrIlRwREVGhwNETL73RqbGJiIiKPDZPSBQcAEZERERFGWsaiIiIdGDzxEsMGoiIiHRh84SEQQMREZEOrGl4iX0aiIiISC+saShOTBSaE8JEuVhTbaZMXmpzhfIxU27eDnUJhfJS7pCUo+AvQ5PnxWs+DaWO5/lzBS88Nk9IGDQQERG9RnFqYjAEmyeIiIhIL6xpICIi0kWIF4sh+xcTDBqIiIh04OiJl9g8QURERHphTQMREZEuHD0hYdBARESkg0r9YjFk/+KCzRNERESkF9Y0EBER6cLmCQmDBiIiIh04euIlBg1vmkrBR50qlJcwVe6YlMpLqcc7P7dU8DHSCh2TYo+rBiDYoFpwCn1xmSj0uOqsTAW/vvicBgk/gkRERKQX1jQQERHpwOaJlxg0EBER6cKOkBI2TxAREZFeWNNARESkA5snXmLQQEREpAtHT0jYPEFERER6YU0DERGRDmyeeIlBAxERkS4cPSFh8wQRERHphTUNREREOrB54iUGDcWJUnNPmCg5f4IylWFZ5socU5aFcufuuUJ5qc0VyeZFXorNp6FINgAUnE9DsUtPoc9ShoIV5WrxYjFk/2KCQQMREZEu7NMgYZ8GIiIi0gtrGoiIiHRQwcA+DbKVxPgYNBAREenCJ0JK2DxBRERUCM2bNw+enp6wtLSEn58fjhw5onP7NWvWoFq1arC0tISPjw/+/PNPrfd79eoFlUqltbRu3TpfZWLQQEREpINmyKUhS36tWrUKYWFhCA8Px7Fjx1CnTh0EBQXh3r17uW7/999/o3v37ujbty+OHz+Ojh07omPHjjh9+rTWdq1bt8bdu3elZeXKlfkqF4MGIiIiXYQMSz7NnDkT/fv3R+/evVGjRg0sWLAA1tbWWLx4ca7bz5o1C61bt8bnn3+O6tWrY/LkyXjrrbcwd+5cre0sLCzg5uYmLaVKlcpXuRg0EBERFSKZmZmIjY1FYGCgtM7ExASBgYE4ePBgrvscPHhQa3sACAoKyrF9TEwMXFxcULVqVQwaNAgPHjzIV9nYEZKIiEgHlRBQGdCZUbNvSkqK1noLCwtYWFjk2D4pKQlZWVlwdXXVWu/q6orz58/nmkdCQkKu2yckJEivW7dujU6dOsHLywtXrlzBuHHjEBwcjIMHD8LU1FSvY2HQQEREpIv6/xdD9gfg4eGhtTo8PBwTJ040IOH86datm/R/Hx8f1K5dG97e3oiJiUHLli31SoNBAxERkQJu3rwJe3t76XVutQwA4OTkBFNTUyQmJmqtT0xMhJubW677uLm55Wt7AKhYsSKcnJxw+fJlBg3/RaIYzj0h9KsxM5hScxooNR8EADy3VmgOAEtFsnmRV+732DeQj3Lj6oWZMvmoSyhzTIp9Zp8a8tM/f+RqnrC3t9cKGvJibm4OX19fREdHo2PHjgAAtVqN6OhoDB06NNd9/P39ER0djZEjR0rrdu7cCX9//zzzuXXrFh48eIAyZcrofSzsCElERKSLEUZPhIWFYdGiRVi6dCnOnTuHQYMGIS0tDb179wYAhISEYOzYsdL2I0aMwLZt2/D999/j/PnzmDhxIv755x8pyEhNTcXnn3+OQ4cO4dq1a4iOjkaHDh1QqVIlBAUF6V2uQhc0REREoEGDBrCzs4OLiws6duyICxcuaG3TvHnzHA+o+OSTT4xUYiIiKtY0T4Q0ZMmnDz/8EDNmzMCECRNQt25dxMXFYdu2bVJnxxs3buDu3bvS9o0aNcKKFSuwcOFC1KlTB2vXrsWGDRtQq1YtAICpqSlOnjyJ9u3bo0qVKujbty98fX2xb9++PJtJcqMSonA937J169bo1q0bGjRogOfPn2PcuHE4ffo0zp49CxsbGwAvgoYqVarg66+/lvaztrbWq9oHeNGD1cHBAS0su6KE6s3O62tSquQbTT87dWll8npeUrn66GcOytTdZtopU6eaacPmCYPyYvNEgRW/5omnuDHmKyQnJ+t9788vzXdFs8bjUaJEwS/058+f4q8Dk99oWZVS6Po0bNu2Tet1VFQUXFxcEBsbi2bNmknrra2tdXbwICIikkNBn+qYff/iotA1T7wqOTkZAODo6Ki1fvny5XByckKtWrUwduxYpKen55lGRkYGUlJStBYiIiK9GKF5orAqdDUN2anVaowcORKNGzeW2mUA4KOPPkKFChXg7u6OkydPYvTo0bhw4QLWrVuXazoRERGYNGmSUsUmIiIqlgp10DBkyBCcPn0a+/fv11o/YMAA6f8+Pj4oU6YMWrZsiStXrsDb2ztHOmPHjkVYWJj0OiUlJcdDNoiIiHKjUr9YDNm/uCi0QcPQoUOxefNm/PXXXyhXrpzObf38/AAAly9fzjVoyOtRnURERK9laBMDmyfeHCEEhg0bhvXr1yMmJgZeXl6v3ScuLg4A8vWACiIiIsqfQhc0DBkyBCtWrMDGjRthZ2cnTbbh4OAAKysrXLlyBStWrECbNm1QunRpnDx5EqNGjUKzZs1Qu3ZtI5eeiIiKnQI+oElr/2Ki0AUN8+fPB/DiWQzZLVmyBL169YK5uTl27dqFyMhIpKWlwcPDA507d8ZXX31lhNISEVFxJ9djpIuDQhc0vO5ZUx4eHti7d69CpZGBSaEf1Zp/pso9oEhdQpm81Ap9EtRv9lliWrKslMnnubUy+bzIS5mbb5a1cj3XhGWWIvmYKJSPmflzRfLJSn+qSD6krdAFDURERIUKO0JKGDQQERHpIgAYUvlUfGIGBg1ERES6sE/DS8WwwZ2IiIjeBNY0EBER6SJgYJ8G2UpidAwaiIiIdGFHSAmbJ4iIiEgvrGkgIiLSRQ3AkEfGcMIqIiKi/waOnniJzRNERESkF9Y0EBER6cKOkBIGDcWJQvVGwkS5uSeEQvNcZJkplI+Fcucuy0KZfJSaDwIAntsrNE+D7TNF8gEAG5sMRfIpbZOuSD5OVqmK5PMsLRNXFckJDBqyYfMEERER6YU1DURERLqwpkHCoIGIiEgXDrmUMGggIiLSgUMuX2KfBiIiItILaxqIiIh0YZ8GCYMGIiIiXdQCUBnwxa8uPkEDmyeIiIhIL6xpICIi0oXNExIGDURERDoZGDSg+AQNbJ4gIiIivbCmoThRKTOvgVAoHwBQmyqTj1Dok6A2VyYfAMiyVObXTZa1ck+uUWpOCAd7ZeZpAAB3+xRF8vG0+VeRfKpaJyiSz1Pz59isSE5g80Q2DBqIiIh0UQsY1MTA0RNERET0X8OaBiIiIl2E+sViyP7FBIMGIiIiXdinQcKggYiISBf2aZCwTwMRERHphTUNREREurB5QsKggYiISBcBA4MG2UpidGyeICIiIr2wpoGIiEgXNk9IGDQQERHpolYDMOBZC2o+p4EKI6XmnlCwUUuYKHNMaqXmnlDwE5el0DwXwipLmYwAWFtnKpKPi22qIvkAQEXbJEXyqWNzU5F8fC2vK5JPalbx+SIuShg0EBER6cLmCQmDBiIiIl0YNEg4eoKIiIj0wpoGIiIiXfgYaQmDBiIiIh2EUEMYMFOlIfsWNgwaiIiIdBHCsNoC9mkgIiKi/xrWNBAREekiDOzTUIxqGhg0EBER6aJWAyoD+iUUoz4NbJ4gIiIivbCmgYiISBc2T0gYNLxpCs0HAQBCqbwUmg8CAISpMvmoSyg0x4WZItm8yMtCmSpRU0vl5p6ws3qqSD5lrFMUyQcAKlvdUyQfH0tl5p6oa2GhSD4pmcpV+Qu1GsKA5oniNOSy0DVPzJ8/H7Vr14a9vT3s7e3h7++PrVu3Su8/ffoUQ4YMQenSpWFra4vOnTsjMTHRiCUmIiL6byh0QUO5cuXw7bffIjY2Fv/88w9atGiBDh064MyZMwCAUaNG4Y8//sCaNWuwd+9e3LlzB506dTJyqYmIqNjSzD1hyFJMFLrmiXbt2mm9/uabbzB//nwcOnQI5cqVwy+//IIVK1agRYsWAIAlS5agevXqOHToEN5++21jFJmIiIoztQBU7NMAFMKahuyysrLw22+/IS0tDf7+/oiNjcWzZ88QGBgobVOtWjWUL18eBw8eNGJJiYiIir9CV9MAAKdOnYK/vz+ePn0KW1tbrF+/HjVq1EBcXBzMzc1RsmRJre1dXV2RkJCQZ3oZGRnIyMiQXqekKNfJiYiIijghABjynIbiU9NQKIOGqlWrIi4uDsnJyVi7di1CQ0Oxd+/eAqcXERGBSZMmyVhCIiL6rxBqAWFA84QoRkFDoWyeMDc3R6VKleDr64uIiAjUqVMHs2bNgpubGzIzM/Ho0SOt7RMTE+Hm5pZnemPHjkVycrK03LypzNAjIiIqBoTa8KWYKJRBw6vUajUyMjLg6+sLMzMzREdHS+9duHABN27cgL+/f577W1hYSEM4NQsRERHlT6Frnhg7diyCg4NRvnx5PH78GCtWrEBMTAy2b98OBwcH9O3bF2FhYXB0dIS9vT2GDRsGf39/jpwgIqI3gs0TLxW6oOHevXsICQnB3bt34eDggNq1a2P79u149913AQA//PADTExM0LlzZ2RkZCAoKAg//vijkUtNRETFllDDsI6Qxad5otAFDb/88ovO9y0tLTFv3jzMmzevwHloor7n4lmB09CXiTrj9RvJJCtLmbyeP1fuMdJZz5S5RLMylGmpy1LmKcgAAPUThR7vnJ6pTD4AsiyUucYzzZQ7pqeq54rkk5alzBeXUo93Tkl9kY8Sv+Kf45lBU088x5v/rlGKShSnehM93bp1Cx4eHsYuBhERGejmzZsoV67cG0n76dOn8PLy0jmkX19ubm6Ij4+HpaWlDCUznv9k0KBWq3Hnzh3Y2dlBlY9JnlJSUuDh4YGbN28Wi86Uxe14AB5TUcFjKvwK+/EIIfD48WO4u7vDxOTN1RQ+ffoUmZmG1zyZm5sX+YABKITNE0owMTExKDItbiMwitvxADymooLHVPgV5uNxcHB443lYWloWiy97uRSJIZdERERkfAwaiIiISC8MGvLBwsIC4eHhsLCwMHZRZFHcjgfgMRUVPKbCr7gdD8njP9kRkoiIiPKPNQ1ERESkFwYNREREpBcGDURERKQXBg16mjdvHjw9PWFpaQk/Pz8cOXLE2EUqsIiICDRo0AB2dnZwcXFBx44dceHCBWMXS1bffvstVCoVRo4caeyiGOT27dv4+OOPUbp0aVhZWcHHxwf//POPsYtVIFlZWRg/fjy8vLxgZWUFb29vTJ48uUhN5vPXX3+hXbt2cHd3h0qlwoYNG7TeF0JgwoQJKFOmDKysrBAYGIhLly4Zp7B60nVMz549w+jRo+Hj4wMbGxu4u7sjJCQEd+7cMV6ByagYNOhh1apVCAsLQ3h4OI4dO4Y6deogKCgI9+7dM3bRCmTv3r0YMmQIDh06hJ07d+LZs2do1aoV0tLSjF00WRw9ehQ//fQTateubeyiGOThw4do3LgxzMzMsHXrVpw9exbff/89SpUqZeyiFci0adMwf/58zJ07F+fOncO0adPw3XffYc6cOcYumt7S0tJQp06dPOe++e677zB79mwsWLAAhw8fho2NDYKCgvD0qYKTjuSTrmNKT0/HsWPHMH78eBw7dgzr1q3DhQsX0L59eyOUlAoFQa/VsGFDMWTIEOl1VlaWcHd3FxEREUYslXzu3bsnAIi9e/cauygGe/z4sahcubLYuXOnCAgIECNGjDB2kQps9OjRokmTJsYuhmzatm0r+vTpo7WuU6dOokePHkYqkWEAiPXr10uv1Wq1cHNzE9OnT5fWPXr0SFhYWIiVK1caoYT59+ox5ebIkSMCgLh+/boyhaJChTUNr5GZmYnY2FgEBgZK60xMTBAYGIiDBw8asWTySU5OBgA4OjoauSSGGzJkCNq2bav19yqqNm3ahPr16+ODDz6Ai4sL6tWrh0WLFhm7WAXWqFEjREdH4+LFiwCAEydOYP/+/QgODjZyyeQRHx+PhIQErWvPwcEBfn5+xeZeAby4X6hUKpQsWdLYRSEj+E/OPZEfSUlJyMrKgqurq9Z6V1dXnD9/3kilko9arcbIkSPRuHFj1KpVy9jFMchvv/2GY8eO4ejRo8YuiiyuXr2K+fPnIywsDOPGjcPRo0cxfPhwmJubIzQ01NjFy7cxY8YgJSUF1apVg6mpKbKysvDNN9+gR48exi6aLDQzIeZ2r5BjlsTC4OnTpxg9ejS6d+9eaOejoDeLQcN/3JAhQ3D69Gns37/f2EUxyM2bNzFixAjs3Lmz2Ewuo1arUb9+fUydOhUAUK9ePZw+fRoLFiwokkHD6tWrsXz5cqxYsQI1a9ZEXFwcRo4cCXd39yJ5PP81z549Q9euXSGEwPz5841dHDISNk+8hpOTE0xNTZGYmKi1PjExEW5ubkYqlTyGDh2KzZs3Y8+ePW9sPnqlxMbG4t69e3jrrbdQokQJlChRAnv37sXs2bNRokQJZGVlGbuI+VamTBnUqFFDa1316tVx48YNI5XIMJ9//jnGjBmDbt26wcfHBz179sSoUaMQERFh7KLJQnM/KI73Ck3AcP36dezcuZO1DP9hDBpew9zcHL6+voiOjpbWqdVqREdHw9/f34glKzghBIYOHYr169dj9+7d8PLyMnaRDNayZUucOnUKcXFx0lK/fn306NEDcXFxMDU1NXYR861x48Y5hsJevHgRFSpUMFKJDJOeng4TE+1bjqmpKdRqtZFKJC8vLy+4ublp3StSUlJw+PDhInuvAF4GDJcuXcKuXbtQunRpYxeJjIjNE3oICwtDaGgo6tevj4YNGyIyMhJpaWno3bu3sYtWIEOGDMGKFSuwceNG2NnZSe2tDg4OsLKyMnLpCsbOzi5HnwwbGxuULl26yPbVGDVqFBo1aoSpU6eia9euOHLkCBYuXIiFCxcau2gF0q5dO3zzzTcoX748atasiePHj2PmzJno06ePsYumt9TUVFy+fFl6HR8fj7i4ODg6OqJ8+fIYOXIkpkyZgsqVK8PLywvjx4+Hu7s7OnbsaLxCv4auYypTpgy6dOmCY8eOYfPmzcjKypLuF46OjjA3NzdWsclYjD18o6iYM2eOKF++vDA3NxcNGzYUhw4dMnaRCgxArsuSJUuMXTRZFfUhl0II8ccff4hatWoJCwsLUa1aNbFw4UJjF6nAUlJSxIgRI0T58uWFpaWlqFixovjyyy9FRkaGsYumtz179uT62QkNDRVCvBh2OX78eOHq6iosLCxEy5YtxYULF4xb6NfQdUzx8fF53i/27Nlj7KKTEXCWSyIiItIL+zQQERGRXhg0EBERkV4YNBAREZFeGDQQERGRXhg0EBERkV4YNBAREZFeGDQQERGRXhg0EBERkV4YNBAVMr169TLaY4c9PT0RGRkpW3rNmzfHyJEjZUuPiIyLQQO9VkJCAoYNG4aKFSvCwsICHh4eaNeundbEPIa4du0aVCoV4uLiZEnvTYmJiYGnp2eB98/rC3nixImoW7eu9HrWrFmIiorSK025A4yjR49iwIABsqX3OlFRUVCpVDmWn3/+WbEyEJH+OGEV6XTt2jU0btwYJUuWxPTp0+Hj44Nnz55h+/btGDJkCM6fP2/sIiri2bNniuXl4OCgWF4amZmZMDc3h7Ozs+J529vb55jNM7dzoCkjERkPaxpIp8GDB0OlUuHIkSPo3LkzqlSpgpo1ayIsLAyHDh0CkHtNwaNHj6BSqRATEwMAePjwIXr06AFnZ2dYWVmhcuXKWLJkCQBIU3PXq1cPKpUKzZs3B/BiCvKvv/4a5cqVg4WFBerWrYtt27ZJeWjyXb16NZo2bQorKys0aNAAFy9exNGjR1G/fn3Y2toiODgY9+/f1zqun3/+GdWrV4elpSWqVauGH3/8MUe6q1atQkBAACwtLbF8+fIc5+bEiRN45513YGdnB3t7e/j6+uKff/4x+Jy/Wnuwdu1a+Pj4wMrKCqVLl0ZgYCDS0tIwceJELF26FBs3bpR+oWvO96lTp9CiRQtpnwEDBiA1NTVHHt988w3c3d1RtWpVADlrQx49eoSBAwfC1dUVlpaWqFWrFjZv3gwAePDgAbp3746yZcvC2toaPj4+WLlyZb6PV6VSwc3NTWuxsrKSamB+/vlneHl5wdLSUipTv3794OzsDHt7e7Ro0QInTpzQSvPbb7+Fq6sr7Ozs0LdvX4wZM0arNie3ZpOOHTuiV69e0uuMjAx89tlnKFu2LGxsbODn5yedX+BFLUnJkiWxfft2VK9eHba2tmjdujXu3r2rle7ixYtRs2ZNWFhYoEyZMhg6dCgAoE+fPnjvvfe0tn327BlcXFzwyy+/5Ps8EimBNQ2Up3///Rfbtm3DN998AxsbmxzvlyxZUu+0xo8fj7Nnz2Lr1q1wcnLC5cuX8eTJEwDAkSNH0LBhQ+zatQs1a9aUfk3OmjUL33//PX766SfUq1cPixcvRvv27XHmzBlUrlxZSjs8PByRkZEoX748+vTpg48++gh2dnaYNWsWrK2t0bVrV0yYMAHz588HACxfvhwTJkzA3LlzUa9ePRw/fhz9+/eHjY0NQkNDpXTHjBmD77//HvXq1YOlpWWOX8M9evRAvXr1MH/+fJiamiIuLg5mZmZ6nxN93L17F927d8d3332H999/H48fP8a+ffsghMBnn32Gc+fOISUlRQrAHB0dkZaWhqCgIPj7++Po0aO4d+8e+vXrh6FDh2o1e0RHR8Pe3h47d+7MNW+1Wo3g4GA8fvwYv/76K7y9vXH27FmYmpoCAJ4+fQpfX1+MHj0a9vb22LJlC3r27Alvb280bNhQluO/fPkyfv/9d6xbt07K94MPPoCVlRW2bt0KBwcH/PTTT2jZsiUuXrwIR0dHrF69GhMnTsS8efPQpEkTLFu2DLNnz0bFihXzlffQoUNx9uxZ/Pbbb3B3d8f69evRunVrnDp1Srr+0tPTMWPGDCxbtgwmJib4+OOP8dlnn0lB5vz58xEWFoZvv/0WwcHBSE5OxoEDBwAA/fr1Q7NmzXD37l2UKVMGALB582akp6fjww8/lOX8EcnOyLNsUiF2+PBhAUCsW7dO53aa6XOPHz8urXv48KHW9Lnt2rUTvXv31nt/IYRwd3cX33zzjda6Bg0aiMGDB2vt9/PPP0vvr1y5UgAQ0dHR0rqIiAhRtWpV6bW3t7dYsWKFVrqTJ08W/v7+WulGRkbqPG47OzsRFRWlc5vsKlSoIMzNzYWNjY3WYmZmJurUqSNtFxoaKjp06CCEECI2NlYAENeuXcs1zezbaixcuFCUKlVKpKamSuu2bNkiTExMREJCgrSfq6trjmmpK1SoIH744QchhBDbt28XJiYm+ZrauW3btuLTTz+VXr9uevIlS5YIAFrnw9XVVQghRHh4uDAzMxP37t2Ttt+3b5+wt7cXT58+1UrH29tb/PTTT0IIIfz9/aVrRMPPz0/rHOdWrg4dOkhTXF+/fl2YmpqK27dva23TsmVLMXbsWK2yX758WXp/3rx5UvmFeHENf/nll3kef40aNcS0adOk1+3atRO9evXKc3siY2NNA+VJyDhr+qBBg9C5c2ccO3YMrVq1QseOHdGoUaM8t09JScGdO3fQuHFjrfWNGzfOURVdu3Zt6f+urq4AAB8fH6119+7dAwCkpaXhypUr6Nu3L/r37y9t8/z58xzt6PXr19d5TGFhYejXrx+WLVuGwMBAfPDBB/D29ta5z+eff65VBQ4As2fPxl9//ZXr9nXq1EHLli3h4+ODoKAgtGrVCl26dEGpUqXyzOPcuXOoU6eOVu1Q48aNoVarceHCBa1zpKuPQFxcHMqVK4cqVark+n5WVhamTp2K1atX4/bt28jMzERGRgasra3zTDM3dnZ2OHbsmPTaxORlq2mFChW0+lmcOHECqampKF26tFYaT548wZUrVwC8OP5PPvlE631/f3/s2bNH7zKdOnUKWVlZOY49IyNDK29ra2utv3mZMmWka+3evXu4c+cOWrZsmWc+/fr1w8KFC/HFF18gMTERW7duxe7du/UuJ5HSGDRQnipXrgyVSvXazo6am3z2IOPVjoPBwcG4fv06/vzzT+zcuRMtW7bEkCFDMGPGDIPLmb1JQKVS5bpOrVYDgNSuv2jRIvj5+Wmlo6n+1sitSSa7iRMn4qOPPsKWLVuwdetWhIeH47fffsP777+f5z5OTk6oVKmS1jpHR8c8tzc1NcXOnTvx999/Y8eOHZgzZw6+/PJLHD58WOoLUlCvOz4rKyud70+fPh2zZs1CZGQkfHx8YGNjg5EjRyIzMzNf5TAxMclxTvIqY2pqKsqUKaPVt0AjP81lJiYmOYLi7NdsamoqTE1NERsbm+O6sLW1lf7/anOUSqWS0n3d+QOAkJAQjBkzBgcPHsTff/8NLy8vNG3aVO/jIFIaO0JSnhwdHREUFIR58+YhLS0tx/uPHj0CAOmXYPYOYLkNn3R2dkZoaCh+/fVXREZGYuHChQAg/drNysqStrW3t4e7u7vU/qtx4MAB1KhRo8DH5OrqCnd3d1y9ehWVKlXSWgryJVylShWMGjUKO3bsQKdOnaS+BXJSqVRo3LgxJk2ahOPHj8Pc3Bzr168H8OLcZT9vAFC9enWcOHFC62924MABmJiYSB0e9VG7dm3cunULFy9ezPX9AwcOoEOHDvj4449Rp04dVKxYMc9t5fLWW28hISEBJUqUyPH3c3JyAvDi+A8fPqy1n6bTroazs7PW9ZqVlYXTp09Lr+vVq4esrCzcu3cvRz5ubm56ldXOzg6enp46hyaXLl0aHTt2xJIlSxAVFYXevXvrlTaRsTBoIJ3mzZuHrKwsNGzYEL///jsuXbqEc+fOYfbs2fD39wfw4hfV22+/jW+//Rbnzp3D3r178dVXX2mlM2HCBGzcuBGXL1/GmTNnsHnzZlSvXh0A4OLiAisrK2zbtg2JiYlITk4G8KIqf9q0aVi1ahUuXLiAMWPGIC4uDiNGjDDomCZNmoSIiAjMnj0bFy9exKlTp7BkyRLMnDlT7zSePHmCoUOHIiYmBtevX8eBAwdw9OhR6ZjkcvjwYUydOhX//PMPbty4gXXr1uH+/ftSPp6enjh58iQuXLiApKQkPHv2DD169IClpSVCQ0Nx+vRp7NmzB8OGDUPPnj2lpgl9BAQEoFmzZujcuTN27tyJ+Ph4bN26VRrBUrlyZakW5Ny5cxg4cCASExNlPf5XBQYGwt/fHx07dsSOHTtw7do1/P333/jyyy+lkSsjRozA4sWLsWTJEly8eBHh4eE4c+aMVjotWrTAli1bsGXLFpw/fx6DBg2SgmDgRTDYo0cPhISEYN26dYiPj8eRI0cQERGBLVu26F3eiRMn4vvvv8fs2bNx6dIlHDt2DHPmzNHapl+/fli6dCnOnTun1RGXqFAybpcKKgru3LkjhgwZInXkK1u2rGjfvr3UyVEIIc6ePSv8/f2FlZWVqFu3rtixY4dWR8jJkyeL6tWrCysrK+Ho6Cg6dOggrl69Ku2/aNEi4eHhIUxMTERAQIAQQoisrCwxceJEUbZsWamz4NatW6V9cutAuWfPHgFAPHz4UFq3ZMkS4eDgoHVMy5cvF3Xr1hXm5uaiVKlSolmzZlKHz7w6ZmaXkZEhunXrJjw8PIS5ublwd3cXQ4cOFU+ePMlzn+ydDLMLDw/PsyPk2bNnRVBQkHB2dhYWFhaiSpUqYs6cOdK29+7dE++++66wtbXVOt8nT54U77zzjrC0tBSOjo6if//+4vHjx7nmoauMDx48EL179xalS5cWlpaWolatWmLz5s3Sex06dBC2trbCxcVFfPXVVyIkJEQrXX06Qr76t8nrvGikpKSIYcOGCXd3d2FmZiY8PDxEjx49xI0bN6RtvvnmG+Hk5CRsbW1FaGio+OKLL7TSyszMFIMGDRKOjo7CxcVFREREaHWE1GwzYcIE4enpKczMzESZMmXE+++/L06ePJln2devXy9eva0uWLBAVK1aVUpj2LBhWu+r1WpRoUIF0aZNmzzPE1FhoRJCxt5uRESF0MSJE7Fhw4ZC+dTR1NRUlC1bFkuWLEGnTp2MXRwindgRkojICNRqNZKSkvD999+jZMmSaN++vbGLRPRaDBqIiIzgxo0b8PLyQrly5RAVFYUSJXg7psKPzRNERESkF46eICIiIr0waCAiIiK9MGggIiIivTBoICIiIr0waCAiIiK9MGggIiIivTBoICIiIr0waCAiIiK9MGggIiIivfwfP+6b5AXlcrIAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from lifetimes.plotting import plot_frequency_recency_matrix \n",
    "plot_frequency_recency_matrix(bgf)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c39fbd03",
   "metadata": {
    "papermill": {
     "duration": 0.016421,
     "end_time": "2024-06-14T17:30:16.237256",
     "exception": false,
     "start_time": "2024-06-14T17:30:16.220835",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Seems like customers who's bought 11 times and their purchase was when they were 31 weeks old, they are the best customers.\n",
    "\n",
    "As per the tail around 2.5, it represents a customer who buys infrequently, but we've seen them recently, they might buy again, at this moment we are not sure if they are dead or just between purchases."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79982d52",
   "metadata": {
    "papermill": {
     "duration": 0.016659,
     "end_time": "2024-06-14T17:30:16.271845",
     "exception": false,
     "start_time": "2024-06-14T17:30:16.255186",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**PROBABILITY OF A CUSTOMER STILL BEING ALIVE**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c7b53852",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:16.311361Z",
     "iopub.status.busy": "2024-06-14T17:30:16.310891Z",
     "iopub.status.idle": "2024-06-14T17:30:16.786187Z",
     "shell.execute_reply": "2024-06-14T17:30:16.784681Z"
    },
    "papermill": {
     "duration": 0.49842,
     "end_time": "2024-06-14T17:30:16.789265",
     "exception": false,
     "start_time": "2024-06-14T17:30:16.290845",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Probability Customer is Alive,\\nby Frequency and Recency of a Customer'}, xlabel=\"Customer's Historical Frequency\", ylabel=\"Customer's Recency\">"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from lifetimes.plotting import plot_probability_alive_matrix\n",
    "plot_probability_alive_matrix(bgf)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9dcf198d",
   "metadata": {
    "papermill": {
     "duration": 0.016868,
     "end_time": "2024-06-14T17:30:16.823716",
     "exception": false,
     "start_time": "2024-06-14T17:30:16.806848",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**LET'S RANK THE CUSTOMER FROM WORST TO BEST AS PREDICTED**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "1f2a9786",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:16.860264Z",
     "iopub.status.busy": "2024-06-14T17:30:16.859828Z",
     "iopub.status.idle": "2024-06-14T17:30:16.891388Z",
     "shell.execute_reply": "2024-06-14T17:30:16.890222Z"
    },
    "papermill": {
     "duration": 0.05291,
     "end_time": "2024-06-14T17:30:16.894304",
     "exception": false,
     "start_time": "2024-06-14T17:30:16.841394",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>frequency</th>\n",
       "      <th>recency</th>\n",
       "      <th>T</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>predicted_purchases</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Customer ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>15581.0</th>\n",
       "      <td>4.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>2009-12-07 13:59:00</td>\n",
       "      <td>15581.0</td>\n",
       "      <td>0.045302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12835.0</th>\n",
       "      <td>4.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2009-12-06 11:58:00</td>\n",
       "      <td>12835.0</td>\n",
       "      <td>0.049386</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13694.0</th>\n",
       "      <td>4.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>2009-12-06 13:29:00</td>\n",
       "      <td>13694.0</td>\n",
       "      <td>0.049850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18102.0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-08 13:38:00</td>\n",
       "      <td>18102.0</td>\n",
       "      <td>0.049903</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17961.0</th>\n",
       "      <td>7.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-08 13:08:00</td>\n",
       "      <td>17961.0</td>\n",
       "      <td>0.062674</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             frequency  recency     T         InvoiceDate  CustomerID  \\\n",
       "Customer ID                                                             \n",
       "15581.0            4.0     20.0  29.0 2009-12-07 13:59:00     15581.0   \n",
       "12835.0            4.0     20.0  28.0 2009-12-06 11:58:00     12835.0   \n",
       "13694.0            4.0     19.0  27.0 2009-12-06 13:29:00     13694.0   \n",
       "18102.0            5.0     21.0  30.0 2009-12-08 13:38:00     18102.0   \n",
       "17961.0            7.0     22.0  30.0 2009-12-08 13:08:00     17961.0   \n",
       "\n",
       "             predicted_purchases  \n",
       "Customer ID                       \n",
       "15581.0                 0.045302  \n",
       "12835.0                 0.049386  \n",
       "13694.0                 0.049850  \n",
       "18102.0                 0.049903  \n",
       "17961.0                 0.062674  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t = 1\n",
    "TransformedSummary['predicted_purchases'] = bgf.conditional_expected_number_of_purchases_up_to_time(t, TransformedSummary['frequency'], TransformedSummary['recency'], TransformedSummary['T'])\n",
    "TransformedSummary.sort_values(by='predicted_purchases').tail(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ff67db1",
   "metadata": {
    "papermill": {
     "duration": 0.018524,
     "end_time": "2024-06-14T17:30:16.930319",
     "exception": false,
     "start_time": "2024-06-14T17:30:16.911795",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The customer who has made 7.0 purchases, bought very recently is probably going to buy again in the nxt period"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b39eb4f",
   "metadata": {
    "papermill": {
     "duration": 0.016562,
     "end_time": "2024-06-14T17:30:16.965052",
     "exception": false,
     "start_time": "2024-06-14T17:30:16.948490",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**ASSESING THE MODEL FIT**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "a45b9910",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:17.000734Z",
     "iopub.status.busy": "2024-06-14T17:30:17.000257Z",
     "iopub.status.idle": "2024-06-14T17:30:17.597075Z",
     "shell.execute_reply": "2024-06-14T17:30:17.595735Z"
    },
    "papermill": {
     "duration": 0.617824,
     "end_time": "2024-06-14T17:30:17.599733",
     "exception": false,
     "start_time": "2024-06-14T17:30:16.981909",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Frequency of Repeat Transactions'}, xlabel='Number of Calibration Period Transactions', ylabel='Customers'>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from lifetimes.plotting import plot_period_transactions \n",
    "plot_period_transactions(bgf)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a02fbb6a",
   "metadata": {
    "papermill": {
     "duration": 0.017353,
     "end_time": "2024-06-14T17:30:17.634513",
     "exception": false,
     "start_time": "2024-06-14T17:30:17.617160",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "It appears that our actual data and our simulated data line up well"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b1b8147",
   "metadata": {
    "papermill": {
     "duration": 0.017371,
     "end_time": "2024-06-14T17:30:17.669472",
     "exception": false,
     "start_time": "2024-06-14T17:30:17.652101",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**FURTHER CROSS-VALIDATION**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d584fe3e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:17.708608Z",
     "iopub.status.busy": "2024-06-14T17:30:17.707403Z",
     "iopub.status.idle": "2024-06-14T17:30:38.214986Z",
     "shell.execute_reply": "2024-06-14T17:30:38.213642Z"
    },
    "papermill": {
     "duration": 20.530016,
     "end_time": "2024-06-14T17:30:38.218008",
     "exception": false,
     "start_time": "2024-06-14T17:30:17.687992",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>frequency_cal</th>\n",
       "      <th>recency_cal</th>\n",
       "      <th>T_cal</th>\n",
       "      <th>frequency_holdout</th>\n",
       "      <th>duration_holdout</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Customer ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12346.0</th>\n",
       "      <td>8.0</td>\n",
       "      <td>198.0</td>\n",
       "      <td>238.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>122.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12349.0</th>\n",
       "      <td>2.0</td>\n",
       "      <td>165.0</td>\n",
       "      <td>248.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>122.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12355.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>122.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12358.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>181.0</td>\n",
       "      <td>244.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>122.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12359.0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>199.0</td>\n",
       "      <td>247.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>122.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             frequency_cal  recency_cal  T_cal  frequency_holdout  \\\n",
       "Customer ID                                                         \n",
       "12346.0                8.0        198.0  238.0                1.0   \n",
       "12349.0                2.0        165.0  248.0                1.0   \n",
       "12355.0                0.0          0.0   80.0                0.0   \n",
       "12358.0                1.0        181.0  244.0                1.0   \n",
       "12359.0                5.0        199.0  247.0                1.0   \n",
       "\n",
       "             duration_holdout  \n",
       "Customer ID                    \n",
       "12346.0                 122.0  \n",
       "12349.0                 122.0  \n",
       "12355.0                 122.0  \n",
       "12358.0                 122.0  \n",
       "12359.0                 122.0  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from lifetimes.utils import calibration_and_holdout_data \n",
    "summary_cal_holdout=calibration_and_holdout_data(data,'Customer ID','InvoiceDate', calibration_period_end='2010-08-09', observation_period_end='2010-12-09')\n",
    "summary_cal_holdout.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "09159c2a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:38.256141Z",
     "iopub.status.busy": "2024-06-14T17:30:38.255647Z",
     "iopub.status.idle": "2024-06-14T17:30:38.871245Z",
     "shell.execute_reply": "2024-06-14T17:30:38.869912Z"
    },
    "papermill": {
     "duration": 0.638241,
     "end_time": "2024-06-14T17:30:38.874308",
     "exception": false,
     "start_time": "2024-06-14T17:30:38.236067",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/pandas/core/arraylike.py:399: RuntimeWarning: invalid value encountered in log\n",
      "  result = getattr(ufunc, method)(*inputs, **kwargs)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Actual Purchases in Holdout Period vs Predicted Purchases'}, xlabel='Purchases in calibration period', ylabel='Average of Purchases in Holdout Period'>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from lifetimes.plotting import plot_calibration_purchases_vs_holdout_purchases\n",
    "bgf.fit(summary_cal_holdout['frequency_cal'],summary_cal_holdout['recency_cal'],summary_cal_holdout['T_cal']) \n",
    "plot_calibration_purchases_vs_holdout_purchases(bgf,summary_cal_holdout)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6392a2c7",
   "metadata": {
    "papermill": {
     "duration": 0.124466,
     "end_time": "2024-06-14T17:30:39.018479",
     "exception": false,
     "start_time": "2024-06-14T17:30:38.894013",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Let's predict what the customer's future purchases might look like based on their history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d7ddf7ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:39.063905Z",
     "iopub.status.busy": "2024-06-14T17:30:39.062637Z",
     "iopub.status.idle": "2024-06-14T17:30:39.068493Z",
     "shell.execute_reply": "2024-06-14T17:30:39.066939Z"
    },
    "papermill": {
     "duration": 0.03221,
     "end_time": "2024-06-14T17:30:39.071492",
     "exception": false,
     "start_time": "2024-06-14T17:30:39.039282",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#TransformedSummary = pd.DataFrame(TransformedSummary)\n",
    "#TransformedSummary.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "2c633a2a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:39.116602Z",
     "iopub.status.busy": "2024-06-14T17:30:39.116079Z",
     "iopub.status.idle": "2024-06-14T17:30:39.134888Z",
     "shell.execute_reply": "2024-06-14T17:30:39.133427Z"
    },
    "papermill": {
     "duration": 0.044688,
     "end_time": "2024-06-14T17:30:39.138059",
     "exception": false,
     "start_time": "2024-06-14T17:30:39.093371",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.3309434638308421"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t = 10 #predict purchases in 10 periods \n",
    "TransformedSummary2 = TransformedSummary.query('frequency >0.0')\n",
    "individual = TransformedSummary2.iloc[4] \n",
    "# The below function is an alias to bfg.conditional_expected_number_of_purchases_up_to_time\n",
    "bgf.predict(t, individual['frequency'], individual['recency'], individual['T'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cb4abd07",
   "metadata": {
    "papermill": {
     "duration": 0.019743,
     "end_time": "2024-06-14T17:30:39.178200",
     "exception": false,
     "start_time": "2024-06-14T17:30:39.158457",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Let's estimate customer lifetime value using Gamma-Gamma model**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "dac0f0de",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:39.223257Z",
     "iopub.status.busy": "2024-06-14T17:30:39.222850Z",
     "iopub.status.idle": "2024-06-14T17:30:39.287628Z",
     "shell.execute_reply": "2024-06-14T17:30:39.286082Z"
    },
    "papermill": {
     "duration": 0.090093,
     "end_time": "2024-06-14T17:30:39.290753",
     "exception": false,
     "start_time": "2024-06-14T17:30:39.200660",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>frequency</th>\n",
       "      <th>recency</th>\n",
       "      <th>T</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>predicted_purchases</th>\n",
       "      <th>MonetaryValue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Customer ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12358.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>2009-12-05 15:00:00</td>\n",
       "      <td>12358.0</td>\n",
       "      <td>0.007779</td>\n",
       "      <td>3.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12359.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>2009-12-05 15:00:00</td>\n",
       "      <td>12359.0</td>\n",
       "      <td>0.016136</td>\n",
       "      <td>0.42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12362.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-05 15:00:00</td>\n",
       "      <td>12362.0</td>\n",
       "      <td>0.006441</td>\n",
       "      <td>2.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12417.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2009-12-05 15:47:00</td>\n",
       "      <td>12417.0</td>\n",
       "      <td>0.012647</td>\n",
       "      <td>12.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12422.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>2009-12-05 15:47:00</td>\n",
       "      <td>12422.0</td>\n",
       "      <td>0.011062</td>\n",
       "      <td>2.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18268.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18268.0</td>\n",
       "      <td>0.008539</td>\n",
       "      <td>2.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18271.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18271.0</td>\n",
       "      <td>0.007779</td>\n",
       "      <td>0.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18275.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18275.0</td>\n",
       "      <td>0.007779</td>\n",
       "      <td>0.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18276.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18276.0</td>\n",
       "      <td>0.008270</td>\n",
       "      <td>1.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18286.0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>2009-12-08 13:59:00</td>\n",
       "      <td>18286.0</td>\n",
       "      <td>0.010201</td>\n",
       "      <td>0.10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>953 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             frequency  recency     T         InvoiceDate  CustomerID  \\\n",
       "Customer ID                                                             \n",
       "12358.0            0.0      0.0  23.0 2009-12-05 15:00:00     12358.0   \n",
       "12359.0            1.0     11.0  26.0 2009-12-05 15:00:00     12359.0   \n",
       "12362.0            0.0      0.0  30.0 2009-12-05 15:00:00     12362.0   \n",
       "12417.0            1.0      4.0  25.0 2009-12-05 15:47:00     12417.0   \n",
       "12422.0            0.0      0.0  13.0 2009-12-05 15:47:00     12422.0   \n",
       "...                ...      ...   ...                 ...         ...   \n",
       "18268.0            0.0      0.0  20.0 2009-12-08 13:58:00     18268.0   \n",
       "18271.0            0.0      0.0  23.0 2009-12-08 13:58:00     18271.0   \n",
       "18275.0            0.0      0.0  23.0 2009-12-08 13:58:00     18275.0   \n",
       "18276.0            0.0      0.0  21.0 2009-12-08 13:58:00     18276.0   \n",
       "18286.0            0.0      0.0  15.0 2009-12-08 13:59:00     18286.0   \n",
       "\n",
       "             predicted_purchases  MonetaryValue  \n",
       "Customer ID                                      \n",
       "12358.0                 0.007779           3.75  \n",
       "12359.0                 0.016136           0.42  \n",
       "12362.0                 0.006441           2.55  \n",
       "12417.0                 0.012647          12.75  \n",
       "12422.0                 0.011062           2.95  \n",
       "...                          ...            ...  \n",
       "18268.0                 0.008539           2.95  \n",
       "18271.0                 0.007779           0.85  \n",
       "18275.0                 0.007779           0.85  \n",
       "18276.0                 0.008270           1.25  \n",
       "18286.0                 0.010201           0.10  \n",
       "\n",
       "[953 rows x 7 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TransformedSummary['MonetaryValue'] = data2['Price']\n",
    "TransformedSummary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "3d80dd29",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:39.335129Z",
     "iopub.status.busy": "2024-06-14T17:30:39.334704Z",
     "iopub.status.idle": "2024-06-14T17:30:39.369177Z",
     "shell.execute_reply": "2024-06-14T17:30:39.367640Z"
    },
    "papermill": {
     "duration": 0.060002,
     "end_time": "2024-06-14T17:30:39.372133",
     "exception": false,
     "start_time": "2024-06-14T17:30:39.312131",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>frequency</th>\n",
       "      <th>recency</th>\n",
       "      <th>T</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>predicted_purchases</th>\n",
       "      <th>MonetaryValue</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Customer ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12359.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>2009-12-05 15:00:00</td>\n",
       "      <td>12359.0</td>\n",
       "      <td>0.016136</td>\n",
       "      <td>0.42</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12417.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2009-12-05 15:47:00</td>\n",
       "      <td>12417.0</td>\n",
       "      <td>0.012647</td>\n",
       "      <td>12.75</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12471.0</th>\n",
       "      <td>3.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2009-12-06 10:16:00</td>\n",
       "      <td>12471.0</td>\n",
       "      <td>0.037608</td>\n",
       "      <td>0.55</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12600.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2009-12-06 10:41:00</td>\n",
       "      <td>12600.0</td>\n",
       "      <td>0.014715</td>\n",
       "      <td>0.65</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12682.0</th>\n",
       "      <td>2.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-06 11:13:00</td>\n",
       "      <td>12682.0</td>\n",
       "      <td>0.027659</td>\n",
       "      <td>3.75</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18092.0</th>\n",
       "      <td>2.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>2009-12-08 13:38:00</td>\n",
       "      <td>18092.0</td>\n",
       "      <td>0.031312</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18102.0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-08 13:38:00</td>\n",
       "      <td>18102.0</td>\n",
       "      <td>0.049903</td>\n",
       "      <td>2.95</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18168.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2009-12-08 13:46:00</td>\n",
       "      <td>18168.0</td>\n",
       "      <td>0.015225</td>\n",
       "      <td>3.81</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18223.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18223.0</td>\n",
       "      <td>0.016361</td>\n",
       "      <td>2.95</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18252.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18252.0</td>\n",
       "      <td>0.026815</td>\n",
       "      <td>3.45</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>242 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             frequency  recency     T         InvoiceDate  CustomerID  \\\n",
       "Customer ID                                                             \n",
       "12359.0            1.0     11.0  26.0 2009-12-05 15:00:00     12359.0   \n",
       "12417.0            1.0      4.0  25.0 2009-12-05 15:47:00     12417.0   \n",
       "12471.0            3.0     14.0  24.0 2009-12-06 10:16:00     12471.0   \n",
       "12600.0            1.0      6.0  24.0 2009-12-06 10:41:00     12600.0   \n",
       "12682.0            2.0     20.0  30.0 2009-12-06 11:13:00     12682.0   \n",
       "...                ...      ...   ...                 ...         ...   \n",
       "18092.0            2.0     19.0  27.0 2009-12-08 13:38:00     18092.0   \n",
       "18102.0            5.0     21.0  30.0 2009-12-08 13:38:00     18102.0   \n",
       "18168.0            1.0     12.0  28.0 2009-12-08 13:46:00     18168.0   \n",
       "18223.0            1.0     13.0  27.0 2009-12-08 13:58:00     18223.0   \n",
       "18252.0            1.0      5.0  13.0 2009-12-08 13:58:00     18252.0   \n",
       "\n",
       "             predicted_purchases  MonetaryValue    year  \n",
       "Customer ID                                              \n",
       "12359.0                 0.016136           0.42  2009.0  \n",
       "12417.0                 0.012647          12.75  2009.0  \n",
       "12471.0                 0.037608           0.55  2009.0  \n",
       "12600.0                 0.014715           0.65  2009.0  \n",
       "12682.0                 0.027659           3.75  2009.0  \n",
       "...                          ...            ...     ...  \n",
       "18092.0                 0.031312           1.25  2009.0  \n",
       "18102.0                 0.049903           2.95  2009.0  \n",
       "18168.0                 0.015225           3.81  2009.0  \n",
       "18223.0                 0.016361           2.95  2009.0  \n",
       "18252.0                 0.026815           3.45  2009.0  \n",
       "\n",
       "[242 rows x 8 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TransformedSummary['year'] = TransformedSummary['InvoiceDate'].dt.year\n",
    "TransformedSummary = TransformedSummary.query('frequency >0.0')\n",
    "TransformedSummary"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4abbc6d0",
   "metadata": {
    "papermill": {
     "duration": 0.020111,
     "end_time": "2024-06-14T17:30:39.413156",
     "exception": false,
     "start_time": "2024-06-14T17:30:39.393045",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We need to work with customers with a positive frequency only"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "2adde508",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:39.456426Z",
     "iopub.status.busy": "2024-06-14T17:30:39.455986Z",
     "iopub.status.idle": "2024-06-14T17:30:39.490745Z",
     "shell.execute_reply": "2024-06-14T17:30:39.489424Z"
    },
    "papermill": {
     "duration": 0.059636,
     "end_time": "2024-06-14T17:30:39.493466",
     "exception": false,
     "start_time": "2024-06-14T17:30:39.433830",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>frequency</th>\n",
       "      <th>recency</th>\n",
       "      <th>T</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>predicted_purchases</th>\n",
       "      <th>MonetaryValue</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Customer ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12359.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>2009-12-05 15:00:00</td>\n",
       "      <td>12359.0</td>\n",
       "      <td>0.016136</td>\n",
       "      <td>0.42</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12417.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2009-12-05 15:47:00</td>\n",
       "      <td>12417.0</td>\n",
       "      <td>0.012647</td>\n",
       "      <td>12.75</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12471.0</th>\n",
       "      <td>3.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2009-12-06 10:16:00</td>\n",
       "      <td>12471.0</td>\n",
       "      <td>0.037608</td>\n",
       "      <td>0.55</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12600.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2009-12-06 10:41:00</td>\n",
       "      <td>12600.0</td>\n",
       "      <td>0.014715</td>\n",
       "      <td>0.65</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12682.0</th>\n",
       "      <td>2.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-06 11:13:00</td>\n",
       "      <td>12682.0</td>\n",
       "      <td>0.027659</td>\n",
       "      <td>3.75</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18092.0</th>\n",
       "      <td>2.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>2009-12-08 13:38:00</td>\n",
       "      <td>18092.0</td>\n",
       "      <td>0.031312</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18102.0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-08 13:38:00</td>\n",
       "      <td>18102.0</td>\n",
       "      <td>0.049903</td>\n",
       "      <td>2.95</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18168.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2009-12-08 13:46:00</td>\n",
       "      <td>18168.0</td>\n",
       "      <td>0.015225</td>\n",
       "      <td>3.81</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18223.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18223.0</td>\n",
       "      <td>0.016361</td>\n",
       "      <td>2.95</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18252.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18252.0</td>\n",
       "      <td>0.026815</td>\n",
       "      <td>3.45</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>242 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             frequency  recency     T         InvoiceDate  CustomerID  \\\n",
       "Customer ID                                                             \n",
       "12359.0            1.0     11.0  26.0 2009-12-05 15:00:00     12359.0   \n",
       "12417.0            1.0      4.0  25.0 2009-12-05 15:47:00     12417.0   \n",
       "12471.0            3.0     14.0  24.0 2009-12-06 10:16:00     12471.0   \n",
       "12600.0            1.0      6.0  24.0 2009-12-06 10:41:00     12600.0   \n",
       "12682.0            2.0     20.0  30.0 2009-12-06 11:13:00     12682.0   \n",
       "...                ...      ...   ...                 ...         ...   \n",
       "18092.0            2.0     19.0  27.0 2009-12-08 13:38:00     18092.0   \n",
       "18102.0            5.0     21.0  30.0 2009-12-08 13:38:00     18102.0   \n",
       "18168.0            1.0     12.0  28.0 2009-12-08 13:46:00     18168.0   \n",
       "18223.0            1.0     13.0  27.0 2009-12-08 13:58:00     18223.0   \n",
       "18252.0            1.0      5.0  13.0 2009-12-08 13:58:00     18252.0   \n",
       "\n",
       "             predicted_purchases  MonetaryValue    year  \n",
       "Customer ID                                              \n",
       "12359.0                 0.016136           0.42  2009.0  \n",
       "12417.0                 0.012647          12.75  2009.0  \n",
       "12471.0                 0.037608           0.55  2009.0  \n",
       "12600.0                 0.014715           0.65  2009.0  \n",
       "12682.0                 0.027659           3.75  2009.0  \n",
       "...                          ...            ...     ...  \n",
       "18092.0                 0.031312           1.25  2009.0  \n",
       "18102.0                 0.049903           2.95  2009.0  \n",
       "18168.0                 0.015225           3.81  2009.0  \n",
       "18223.0                 0.016361           2.95  2009.0  \n",
       "18252.0                 0.026815           3.45  2009.0  \n",
       "\n",
       "[242 rows x 8 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TransformedSummaryGrouped = TransformedSummary.groupby(by=['CustomerID','frequency','year','MonetaryValue'])['MonetaryValue'].mean()\n",
    "TransformedSummaryGrouped = TransformedSummary.query('frequency >0.0')\n",
    "TransformedSummaryGrouped"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "596a9e79",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:39.537240Z",
     "iopub.status.busy": "2024-06-14T17:30:39.536840Z",
     "iopub.status.idle": "2024-06-14T17:30:39.574730Z",
     "shell.execute_reply": "2024-06-14T17:30:39.573562Z"
    },
    "papermill": {
     "duration": 0.063081,
     "end_time": "2024-06-14T17:30:39.577345",
     "exception": false,
     "start_time": "2024-06-14T17:30:39.514264",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>frequency</th>\n",
       "      <th>recency</th>\n",
       "      <th>T</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>predicted_purchases</th>\n",
       "      <th>MonetaryValue</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Customer ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12359.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>2009-12-05 15:00:00</td>\n",
       "      <td>12359.0</td>\n",
       "      <td>0.016136</td>\n",
       "      <td>0.42</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12417.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2009-12-05 15:47:00</td>\n",
       "      <td>12417.0</td>\n",
       "      <td>0.012647</td>\n",
       "      <td>12.75</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12471.0</th>\n",
       "      <td>3.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2009-12-06 10:16:00</td>\n",
       "      <td>12471.0</td>\n",
       "      <td>0.037608</td>\n",
       "      <td>0.55</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12600.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2009-12-06 10:41:00</td>\n",
       "      <td>12600.0</td>\n",
       "      <td>0.014715</td>\n",
       "      <td>0.65</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12682.0</th>\n",
       "      <td>2.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-06 11:13:00</td>\n",
       "      <td>12682.0</td>\n",
       "      <td>0.027659</td>\n",
       "      <td>3.75</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18092.0</th>\n",
       "      <td>2.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>2009-12-08 13:38:00</td>\n",
       "      <td>18092.0</td>\n",
       "      <td>0.031312</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18102.0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-08 13:38:00</td>\n",
       "      <td>18102.0</td>\n",
       "      <td>0.049903</td>\n",
       "      <td>2.95</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18168.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2009-12-08 13:46:00</td>\n",
       "      <td>18168.0</td>\n",
       "      <td>0.015225</td>\n",
       "      <td>3.81</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18223.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18223.0</td>\n",
       "      <td>0.016361</td>\n",
       "      <td>2.95</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18252.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18252.0</td>\n",
       "      <td>0.026815</td>\n",
       "      <td>3.45</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>237 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             frequency  recency     T         InvoiceDate  CustomerID  \\\n",
       "Customer ID                                                             \n",
       "12359.0            1.0     11.0  26.0 2009-12-05 15:00:00     12359.0   \n",
       "12417.0            1.0      4.0  25.0 2009-12-05 15:47:00     12417.0   \n",
       "12471.0            3.0     14.0  24.0 2009-12-06 10:16:00     12471.0   \n",
       "12600.0            1.0      6.0  24.0 2009-12-06 10:41:00     12600.0   \n",
       "12682.0            2.0     20.0  30.0 2009-12-06 11:13:00     12682.0   \n",
       "...                ...      ...   ...                 ...         ...   \n",
       "18092.0            2.0     19.0  27.0 2009-12-08 13:38:00     18092.0   \n",
       "18102.0            5.0     21.0  30.0 2009-12-08 13:38:00     18102.0   \n",
       "18168.0            1.0     12.0  28.0 2009-12-08 13:46:00     18168.0   \n",
       "18223.0            1.0     13.0  27.0 2009-12-08 13:58:00     18223.0   \n",
       "18252.0            1.0      5.0  13.0 2009-12-08 13:58:00     18252.0   \n",
       "\n",
       "             predicted_purchases  MonetaryValue    year  \n",
       "Customer ID                                              \n",
       "12359.0                 0.016136           0.42  2009.0  \n",
       "12417.0                 0.012647          12.75  2009.0  \n",
       "12471.0                 0.037608           0.55  2009.0  \n",
       "12600.0                 0.014715           0.65  2009.0  \n",
       "12682.0                 0.027659           3.75  2009.0  \n",
       "...                          ...            ...     ...  \n",
       "18092.0                 0.031312           1.25  2009.0  \n",
       "18102.0                 0.049903           2.95  2009.0  \n",
       "18168.0                 0.015225           3.81  2009.0  \n",
       "18223.0                 0.016361           2.95  2009.0  \n",
       "18252.0                 0.026815           3.45  2009.0  \n",
       "\n",
       "[237 rows x 8 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2 = pd.DataFrame(TransformedSummaryGrouped)\n",
    "TransformedSummaryGroupedCleaned = df2.dropna(axis=1, thresh=2)\n",
    "TransformedSummaryGroupedCleaned.isna().sum()\n",
    "TransformedSummaryGroupedCleaned = TransformedSummaryGroupedCleaned.query('MonetaryValue >0')\n",
    "TransformedSummaryGroupedCleaned.isna().sum()\n",
    "TransformedSummaryGroupedCleaned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "628a813f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:39.623199Z",
     "iopub.status.busy": "2024-06-14T17:30:39.622672Z",
     "iopub.status.idle": "2024-06-14T17:30:39.651796Z",
     "shell.execute_reply": "2024-06-14T17:30:39.650428Z"
    },
    "papermill": {
     "duration": 0.055007,
     "end_time": "2024-06-14T17:30:39.654426",
     "exception": false,
     "start_time": "2024-06-14T17:30:39.599419",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>frequency</th>\n",
       "      <th>recency</th>\n",
       "      <th>T</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>predicted_purchases</th>\n",
       "      <th>MonetaryValue</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Customer ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12359.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>2009-12-05 15:00:00</td>\n",
       "      <td>12359.0</td>\n",
       "      <td>0.016136</td>\n",
       "      <td>0.42</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12417.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2009-12-05 15:47:00</td>\n",
       "      <td>12417.0</td>\n",
       "      <td>0.012647</td>\n",
       "      <td>12.75</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12471.0</th>\n",
       "      <td>3.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2009-12-06 10:16:00</td>\n",
       "      <td>12471.0</td>\n",
       "      <td>0.037608</td>\n",
       "      <td>0.55</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12600.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2009-12-06 10:41:00</td>\n",
       "      <td>12600.0</td>\n",
       "      <td>0.014715</td>\n",
       "      <td>0.65</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12682.0</th>\n",
       "      <td>2.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-06 11:13:00</td>\n",
       "      <td>12682.0</td>\n",
       "      <td>0.027659</td>\n",
       "      <td>3.75</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18092.0</th>\n",
       "      <td>2.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>2009-12-08 13:38:00</td>\n",
       "      <td>18092.0</td>\n",
       "      <td>0.031312</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18102.0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-08 13:38:00</td>\n",
       "      <td>18102.0</td>\n",
       "      <td>0.049903</td>\n",
       "      <td>2.95</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18168.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2009-12-08 13:46:00</td>\n",
       "      <td>18168.0</td>\n",
       "      <td>0.015225</td>\n",
       "      <td>3.81</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18223.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18223.0</td>\n",
       "      <td>0.016361</td>\n",
       "      <td>2.95</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18252.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18252.0</td>\n",
       "      <td>0.026815</td>\n",
       "      <td>3.45</td>\n",
       "      <td>2009.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>237 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             frequency  recency     T         InvoiceDate  CustomerID  \\\n",
       "Customer ID                                                             \n",
       "12359.0            1.0     11.0  26.0 2009-12-05 15:00:00     12359.0   \n",
       "12417.0            1.0      4.0  25.0 2009-12-05 15:47:00     12417.0   \n",
       "12471.0            3.0     14.0  24.0 2009-12-06 10:16:00     12471.0   \n",
       "12600.0            1.0      6.0  24.0 2009-12-06 10:41:00     12600.0   \n",
       "12682.0            2.0     20.0  30.0 2009-12-06 11:13:00     12682.0   \n",
       "...                ...      ...   ...                 ...         ...   \n",
       "18092.0            2.0     19.0  27.0 2009-12-08 13:38:00     18092.0   \n",
       "18102.0            5.0     21.0  30.0 2009-12-08 13:38:00     18102.0   \n",
       "18168.0            1.0     12.0  28.0 2009-12-08 13:46:00     18168.0   \n",
       "18223.0            1.0     13.0  27.0 2009-12-08 13:58:00     18223.0   \n",
       "18252.0            1.0      5.0  13.0 2009-12-08 13:58:00     18252.0   \n",
       "\n",
       "             predicted_purchases  MonetaryValue    year  \n",
       "Customer ID                                              \n",
       "12359.0                 0.016136           0.42  2009.0  \n",
       "12417.0                 0.012647          12.75  2009.0  \n",
       "12471.0                 0.037608           0.55  2009.0  \n",
       "12600.0                 0.014715           0.65  2009.0  \n",
       "12682.0                 0.027659           3.75  2009.0  \n",
       "...                          ...            ...     ...  \n",
       "18092.0                 0.031312           1.25  2009.0  \n",
       "18102.0                 0.049903           2.95  2009.0  \n",
       "18168.0                 0.015225           3.81  2009.0  \n",
       "18223.0                 0.016361           2.95  2009.0  \n",
       "18252.0                 0.026815           3.45  2009.0  \n",
       "\n",
       "[237 rows x 8 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TransformedSummaryGroupedCleaned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "173d1fd9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:39.699865Z",
     "iopub.status.busy": "2024-06-14T17:30:39.699376Z",
     "iopub.status.idle": "2024-06-14T17:30:39.756768Z",
     "shell.execute_reply": "2024-06-14T17:30:39.755196Z"
    },
    "papermill": {
     "duration": 0.085487,
     "end_time": "2024-06-14T17:30:39.761668",
     "exception": false,
     "start_time": "2024-06-14T17:30:39.676181",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<lifetimes.GammaGammaFitter: fitted with 237 subjects, p: 1.81, q: 1.25, v: 1.25>\n"
     ]
    }
   ],
   "source": [
    "from lifetimes import GammaGammaFitter\n",
    "\n",
    "ggf = GammaGammaFitter(penalizer_coef = 0.03)\n",
    "ggf.fit(TransformedSummaryGroupedCleaned['frequency'],TransformedSummaryGroupedCleaned['MonetaryValue'])\n",
    "print(ggf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "9a3ddb11",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-14T17:30:39.864839Z",
     "iopub.status.busy": "2024-06-14T17:30:39.862616Z",
     "iopub.status.idle": "2024-06-14T17:30:39.894568Z",
     "shell.execute_reply": "2024-06-14T17:30:39.893088Z"
    },
    "papermill": {
     "duration": 0.086001,
     "end_time": "2024-06-14T17:30:39.897688",
     "exception": false,
     "start_time": "2024-06-14T17:30:39.811687",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>frequency</th>\n",
       "      <th>recency</th>\n",
       "      <th>T</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>predicted_purchases</th>\n",
       "      <th>MonetaryValue</th>\n",
       "      <th>year</th>\n",
       "      <th>predicted_avg_value</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Customer ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12359.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>2009-12-05 15:00:00</td>\n",
       "      <td>12359.0</td>\n",
       "      <td>0.016136</td>\n",
       "      <td>0.42</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>1.469590</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12417.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2009-12-05 15:47:00</td>\n",
       "      <td>12417.0</td>\n",
       "      <td>0.012647</td>\n",
       "      <td>12.75</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>12.322459</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12471.0</th>\n",
       "      <td>3.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2009-12-06 10:16:00</td>\n",
       "      <td>12471.0</td>\n",
       "      <td>0.037608</td>\n",
       "      <td>0.55</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>0.924589</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12600.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2009-12-06 10:41:00</td>\n",
       "      <td>12600.0</td>\n",
       "      <td>0.014715</td>\n",
       "      <td>0.65</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>1.672036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12682.0</th>\n",
       "      <td>2.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-06 11:13:00</td>\n",
       "      <td>12682.0</td>\n",
       "      <td>0.027659</td>\n",
       "      <td>3.75</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>4.096057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18092.0</th>\n",
       "      <td>2.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>2009-12-08 13:38:00</td>\n",
       "      <td>18092.0</td>\n",
       "      <td>0.031312</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>1.755348</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18102.0</th>\n",
       "      <td>5.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>2009-12-08 13:38:00</td>\n",
       "      <td>18102.0</td>\n",
       "      <td>0.049903</td>\n",
       "      <td>2.95</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>3.115125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18168.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2009-12-08 13:46:00</td>\n",
       "      <td>18168.0</td>\n",
       "      <td>0.015225</td>\n",
       "      <td>3.81</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>4.453469</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18223.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18223.0</td>\n",
       "      <td>0.016361</td>\n",
       "      <td>2.95</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>3.696496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18252.0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>2009-12-08 13:58:00</td>\n",
       "      <td>18252.0</td>\n",
       "      <td>0.026815</td>\n",
       "      <td>3.45</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>4.136596</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>237 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             frequency  recency     T         InvoiceDate  CustomerID  \\\n",
       "Customer ID                                                             \n",
       "12359.0            1.0     11.0  26.0 2009-12-05 15:00:00     12359.0   \n",
       "12417.0            1.0      4.0  25.0 2009-12-05 15:47:00     12417.0   \n",
       "12471.0            3.0     14.0  24.0 2009-12-06 10:16:00     12471.0   \n",
       "12600.0            1.0      6.0  24.0 2009-12-06 10:41:00     12600.0   \n",
       "12682.0            2.0     20.0  30.0 2009-12-06 11:13:00     12682.0   \n",
       "...                ...      ...   ...                 ...         ...   \n",
       "18092.0            2.0     19.0  27.0 2009-12-08 13:38:00     18092.0   \n",
       "18102.0            5.0     21.0  30.0 2009-12-08 13:38:00     18102.0   \n",
       "18168.0            1.0     12.0  28.0 2009-12-08 13:46:00     18168.0   \n",
       "18223.0            1.0     13.0  27.0 2009-12-08 13:58:00     18223.0   \n",
       "18252.0            1.0      5.0  13.0 2009-12-08 13:58:00     18252.0   \n",
       "\n",
       "             predicted_purchases  MonetaryValue    year  predicted_avg_value  \n",
       "Customer ID                                                                   \n",
       "12359.0                 0.016136           0.42  2009.0             1.469590  \n",
       "12417.0                 0.012647          12.75  2009.0            12.322459  \n",
       "12471.0                 0.037608           0.55  2009.0             0.924589  \n",
       "12600.0                 0.014715           0.65  2009.0             1.672036  \n",
       "12682.0                 0.027659           3.75  2009.0             4.096057  \n",
       "...                          ...            ...     ...                  ...  \n",
       "18092.0                 0.031312           1.25  2009.0             1.755348  \n",
       "18102.0                 0.049903           2.95  2009.0             3.115125  \n",
       "18168.0                 0.015225           3.81  2009.0             4.453469  \n",
       "18223.0                 0.016361           2.95  2009.0             3.696496  \n",
       "18252.0                 0.026815           3.45  2009.0             4.136596  \n",
       "\n",
       "[237 rows x 9 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TransformedSummaryGroupedCleaned['predicted_avg_value'] = ggf.conditional_expected_average_profit(\n",
    "    TransformedSummaryGroupedCleaned['frequency'], TransformedSummaryGroupedCleaned['MonetaryValue'])\n",
    "\n",
    "TransformedSummaryGroupedCleaned"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d9fe1cba",
   "metadata": {
    "papermill": {
     "duration": 0.022234,
     "end_time": "2024-06-14T17:30:39.942654",
     "exception": false,
     "start_time": "2024-06-14T17:30:39.920420",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We need to get CLV while using Discounted Cash Flow"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fa4a0ab3",
   "metadata": {
    "papermill": {
     "duration": 0.022064,
     "end_time": "2024-06-14T17:30:39.987352",
     "exception": false,
     "start_time": "2024-06-14T17:30:39.965288",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "e11b01e7",
   "metadata": {
    "papermill": {
     "duration": 0.02322,
     "end_time": "2024-06-14T17:30:40.038758",
     "exception": false,
     "start_time": "2024-06-14T17:30:40.015538",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5104578,
     "sourceId": 8543876,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 5104745,
     "sourceId": 8544133,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 153.43743,
   "end_time": "2024-06-14T17:30:40.987520",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-14T17:28:07.550090",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
